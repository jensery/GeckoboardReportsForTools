//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_branchgroups_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "branchgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.branchgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_branchgroups_group", "groupsinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.groupsinfo), "branchgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.branchgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_contentlibrarylocations_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "contentlibraries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.contentlibrary), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_inventorinstalloptions_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "inventorinstalloptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.inventorinstalloption), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_productbuilds_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.branchinfo), "productbuilds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productbuild), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEECustomAction_Branches", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.branchinfo), "veecustomactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veecustomaction), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vimserverstorage_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.branchinfo), "vimserverstorage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vimserverstorage), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_branch", "branchinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.branchinfo), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_host", "hostinfos", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.hostinfo), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_image", "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.imageshistory), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_machine", "clientmachines", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.clientmachine), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_statusmsg", "statusmessages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.statusmessage), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_statustype", "statustype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.statustype), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_user", "users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.user), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_cipdata_version", "versionsid", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.versionsid), "cipdata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.cipdata), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_contentlibrarylocations_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "contentlibraries", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.contentlibrary), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEECustomAction_CustomActionInfo", "customactioninfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.customactioninfo), "veecustomactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veecustomaction), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_geosites_notify", "notifyemailtargets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.notifyemailtarget), "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.geosite), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_productbuilds_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.geosite), "productbuilds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productbuild), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_publishtargetsinfo_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "publishtargetsinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.publishtargetsinfo), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEESRV_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "veeservices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veeservice), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vimserverstorage_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "vimserverstorage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vimserverstorage), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_geosite", "geosites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.geosite), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_platformgroups_group", "groupsinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.groupsinfo), "platformgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.platformgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_productgroups_group", "groupsinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.groupsinfo), "productgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_usagegroups_group", "groupsinfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.groupsinfo), "usagegroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.usagegroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_content", "imagecontents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.imagecontent), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_job", "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.job), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_platform", "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.platform), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.producttype), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_removestatus", "statustype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.statustype), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_imageshistory_template", "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.vmtemplate), "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.imageshistory), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_image", "imageshistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.imageshistory), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vimserverstorage_imagetype", "imagetypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.imagetype), "vimserverstorage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vimserverstorage), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_inventorinstalloptions_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.producttype), "inventorinstalloptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.inventorinstalloption), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_option", "inventorinstalloptions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.inventorinstalloption), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_curstatus", "statusmessages", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.statusmessage), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_service", "veeservices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.veeservice), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_status", "statustype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.statustype), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_template", "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.vmtemplate), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_jobs_type", "jobtypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.jobtype), "jobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.job), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_platforms_lang", "languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.language), "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.platform), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEESRV_notify", "notifyemailtargets", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.notifyemailtarget), "veeservices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veeservice), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_platformgroups_platform", "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.platform), "platformgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.platformgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEECustomAction_Platforms", "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.platform), "veecustomactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veecustomaction), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vimserverstorage_platform", "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.platform), "vimserverstorage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vimserverstorage), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_platform", "platforms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.platform), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_prodcutbuilds_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.producttype), "productbuilds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productbuild), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_productgroups_product", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.producttype), "productgroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productgroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_productpatterns_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.producttype), "productpatterns", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.productpattern), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEECustomAction_Producttypes", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.producttype), "veecustomactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veecustomaction), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vimserverstorage_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.producttype), "vimserverstorage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vimserverstorage), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_producttype", "producttypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.producttype), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEESRV_status", "statustype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.statustype), "veeservices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veeservice), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_usagegroups_usagetype", "usagetypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.usagetype), "usagegroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.usagegroup), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_VEECustomAction_Usagetypes", "usagetypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.usagetype), "veecustomactions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veecustomaction), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_veeservices_usage", "usagetypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GeckoboardReport_VEE.usagetype), "veeservices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.veeservice), true)]
[assembly: EdmRelationshipAttribute("veedatatest5Model", "FK_vmtemplates_usage", "usagetypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GeckoboardReport_VEE.usagetype), "vmtemplates", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GeckoboardReport_VEE.vmtemplate), true)]

#endregion

namespace GeckoboardReport_VEE
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class veedatatest5Entities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new veedatatest5Entities1 object using the connection string found in the 'veedatatest5Entities1' section of the application configuration file.
        /// </summary>
        public veedatatest5Entities1() : base("name=veedatatest5Entities1", "veedatatest5Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new veedatatest5Entities1 object.
        /// </summary>
        public veedatatest5Entities1(string connectionString) : base(connectionString, "veedatatest5Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new veedatatest5Entities1 object.
        /// </summary>
        public veedatatest5Entities1(EntityConnection connection) : base(connection, "veedatatest5Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> accounts
        {
            get
            {
                if ((_accounts == null))
                {
                    _accounts = base.CreateObjectSet<account>("accounts");
                }
                return _accounts;
            }
        }
        private ObjectSet<account> _accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<branchgroup> branchgroups
        {
            get
            {
                if ((_branchgroups == null))
                {
                    _branchgroups = base.CreateObjectSet<branchgroup>("branchgroups");
                }
                return _branchgroups;
            }
        }
        private ObjectSet<branchgroup> _branchgroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<branchinfo> branchinfoes
        {
            get
            {
                if ((_branchinfoes == null))
                {
                    _branchinfoes = base.CreateObjectSet<branchinfo>("branchinfoes");
                }
                return _branchinfoes;
            }
        }
        private ObjectSet<branchinfo> _branchinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cipdata> cipdatas
        {
            get
            {
                if ((_cipdatas == null))
                {
                    _cipdatas = base.CreateObjectSet<cipdata>("cipdatas");
                }
                return _cipdatas;
            }
        }
        private ObjectSet<cipdata> _cipdatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<clientmachine> clientmachines
        {
            get
            {
                if ((_clientmachines == null))
                {
                    _clientmachines = base.CreateObjectSet<clientmachine>("clientmachines");
                }
                return _clientmachines;
            }
        }
        private ObjectSet<clientmachine> _clientmachines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contentlibrary> contentlibraries
        {
            get
            {
                if ((_contentlibraries == null))
                {
                    _contentlibraries = base.CreateObjectSet<contentlibrary>("contentlibraries");
                }
                return _contentlibraries;
            }
        }
        private ObjectSet<contentlibrary> _contentlibraries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customactioninfo> customactioninfoes
        {
            get
            {
                if ((_customactioninfoes == null))
                {
                    _customactioninfoes = base.CreateObjectSet<customactioninfo>("customactioninfoes");
                }
                return _customactioninfoes;
            }
        }
        private ObjectSet<customactioninfo> _customactioninfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<geosite> geosites
        {
            get
            {
                if ((_geosites == null))
                {
                    _geosites = base.CreateObjectSet<geosite>("geosites");
                }
                return _geosites;
            }
        }
        private ObjectSet<geosite> _geosites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<groupsinfo> groupsinfoes
        {
            get
            {
                if ((_groupsinfoes == null))
                {
                    _groupsinfoes = base.CreateObjectSet<groupsinfo>("groupsinfoes");
                }
                return _groupsinfoes;
            }
        }
        private ObjectSet<groupsinfo> _groupsinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<hostinfo> hostinfos
        {
            get
            {
                if ((_hostinfos == null))
                {
                    _hostinfos = base.CreateObjectSet<hostinfo>("hostinfos");
                }
                return _hostinfos;
            }
        }
        private ObjectSet<hostinfo> _hostinfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<imagecontent> imagecontents
        {
            get
            {
                if ((_imagecontents == null))
                {
                    _imagecontents = base.CreateObjectSet<imagecontent>("imagecontents");
                }
                return _imagecontents;
            }
        }
        private ObjectSet<imagecontent> _imagecontents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<imageshistory> imageshistories
        {
            get
            {
                if ((_imageshistories == null))
                {
                    _imageshistories = base.CreateObjectSet<imageshistory>("imageshistories");
                }
                return _imageshistories;
            }
        }
        private ObjectSet<imageshistory> _imageshistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<imagetype> imagetypes
        {
            get
            {
                if ((_imagetypes == null))
                {
                    _imagetypes = base.CreateObjectSet<imagetype>("imagetypes");
                }
                return _imagetypes;
            }
        }
        private ObjectSet<imagetype> _imagetypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<inventorinstalloption> inventorinstalloptions
        {
            get
            {
                if ((_inventorinstalloptions == null))
                {
                    _inventorinstalloptions = base.CreateObjectSet<inventorinstalloption>("inventorinstalloptions");
                }
                return _inventorinstalloptions;
            }
        }
        private ObjectSet<inventorinstalloption> _inventorinstalloptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<job> jobs
        {
            get
            {
                if ((_jobs == null))
                {
                    _jobs = base.CreateObjectSet<job>("jobs");
                }
                return _jobs;
            }
        }
        private ObjectSet<job> _jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<jobtype> jobtypes
        {
            get
            {
                if ((_jobtypes == null))
                {
                    _jobtypes = base.CreateObjectSet<jobtype>("jobtypes");
                }
                return _jobtypes;
            }
        }
        private ObjectSet<jobtype> _jobtypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<language> languages
        {
            get
            {
                if ((_languages == null))
                {
                    _languages = base.CreateObjectSet<language>("languages");
                }
                return _languages;
            }
        }
        private ObjectSet<language> _languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<monitorsetting> monitorsettings
        {
            get
            {
                if ((_monitorsettings == null))
                {
                    _monitorsettings = base.CreateObjectSet<monitorsetting>("monitorsettings");
                }
                return _monitorsettings;
            }
        }
        private ObjectSet<monitorsetting> _monitorsettings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<namingpattern> namingpatterns
        {
            get
            {
                if ((_namingpatterns == null))
                {
                    _namingpatterns = base.CreateObjectSet<namingpattern>("namingpatterns");
                }
                return _namingpatterns;
            }
        }
        private ObjectSet<namingpattern> _namingpatterns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<notifyemailtarget> notifyemailtargets
        {
            get
            {
                if ((_notifyemailtargets == null))
                {
                    _notifyemailtargets = base.CreateObjectSet<notifyemailtarget>("notifyemailtargets");
                }
                return _notifyemailtargets;
            }
        }
        private ObjectSet<notifyemailtarget> _notifyemailtargets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<platformgroup> platformgroups
        {
            get
            {
                if ((_platformgroups == null))
                {
                    _platformgroups = base.CreateObjectSet<platformgroup>("platformgroups");
                }
                return _platformgroups;
            }
        }
        private ObjectSet<platformgroup> _platformgroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<platform> platforms
        {
            get
            {
                if ((_platforms == null))
                {
                    _platforms = base.CreateObjectSet<platform>("platforms");
                }
                return _platforms;
            }
        }
        private ObjectSet<platform> _platforms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<productbuild> productbuilds
        {
            get
            {
                if ((_productbuilds == null))
                {
                    _productbuilds = base.CreateObjectSet<productbuild>("productbuilds");
                }
                return _productbuilds;
            }
        }
        private ObjectSet<productbuild> _productbuilds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<productgroup> productgroups
        {
            get
            {
                if ((_productgroups == null))
                {
                    _productgroups = base.CreateObjectSet<productgroup>("productgroups");
                }
                return _productgroups;
            }
        }
        private ObjectSet<productgroup> _productgroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<productpattern> productpatterns
        {
            get
            {
                if ((_productpatterns == null))
                {
                    _productpatterns = base.CreateObjectSet<productpattern>("productpatterns");
                }
                return _productpatterns;
            }
        }
        private ObjectSet<productpattern> _productpatterns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<producttype> producttypes
        {
            get
            {
                if ((_producttypes == null))
                {
                    _producttypes = base.CreateObjectSet<producttype>("producttypes");
                }
                return _producttypes;
            }
        }
        private ObjectSet<producttype> _producttypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<programtool> programtools
        {
            get
            {
                if ((_programtools == null))
                {
                    _programtools = base.CreateObjectSet<programtool>("programtools");
                }
                return _programtools;
            }
        }
        private ObjectSet<programtool> _programtools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<publishtargetsinfo> publishtargetsinfoes
        {
            get
            {
                if ((_publishtargetsinfoes == null))
                {
                    _publishtargetsinfoes = base.CreateObjectSet<publishtargetsinfo>("publishtargetsinfoes");
                }
                return _publishtargetsinfoes;
            }
        }
        private ObjectSet<publishtargetsinfo> _publishtargetsinfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<serveralia> serveralias
        {
            get
            {
                if ((_serveralias == null))
                {
                    _serveralias = base.CreateObjectSet<serveralia>("serveralias");
                }
                return _serveralias;
            }
        }
        private ObjectSet<serveralia> _serveralias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<statusmessage> statusmessages
        {
            get
            {
                if ((_statusmessages == null))
                {
                    _statusmessages = base.CreateObjectSet<statusmessage>("statusmessages");
                }
                return _statusmessages;
            }
        }
        private ObjectSet<statusmessage> _statusmessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<statustype> statustypes
        {
            get
            {
                if ((_statustypes == null))
                {
                    _statustypes = base.CreateObjectSet<statustype>("statustypes");
                }
                return _statustypes;
            }
        }
        private ObjectSet<statustype> _statustypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usagegroup> usagegroups
        {
            get
            {
                if ((_usagegroups == null))
                {
                    _usagegroups = base.CreateObjectSet<usagegroup>("usagegroups");
                }
                return _usagegroups;
            }
        }
        private ObjectSet<usagegroup> _usagegroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usagetype> usagetypes
        {
            get
            {
                if ((_usagetypes == null))
                {
                    _usagetypes = base.CreateObjectSet<usagetype>("usagetypes");
                }
                return _usagetypes;
            }
        }
        private ObjectSet<usagetype> _usagetypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<veecustomaction> veecustomactions
        {
            get
            {
                if ((_veecustomactions == null))
                {
                    _veecustomactions = base.CreateObjectSet<veecustomaction>("veecustomactions");
                }
                return _veecustomactions;
            }
        }
        private ObjectSet<veecustomaction> _veecustomactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<veeservice> veeservices
        {
            get
            {
                if ((_veeservices == null))
                {
                    _veeservices = base.CreateObjectSet<veeservice>("veeservices");
                }
                return _veeservices;
            }
        }
        private ObjectSet<veeservice> _veeservices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<versionsid> versionsids
        {
            get
            {
                if ((_versionsids == null))
                {
                    _versionsids = base.CreateObjectSet<versionsid>("versionsids");
                }
                return _versionsids;
            }
        }
        private ObjectSet<versionsid> _versionsids;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vimserverstorage> vimserverstorages
        {
            get
            {
                if ((_vimserverstorages == null))
                {
                    _vimserverstorages = base.CreateObjectSet<vimserverstorage>("vimserverstorages");
                }
                return _vimserverstorages;
            }
        }
        private ObjectSet<vimserverstorage> _vimserverstorages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vmtemplate> vmtemplates
        {
            get
            {
                if ((_vmtemplates == null))
                {
                    _vmtemplates = base.CreateObjectSet<vmtemplate>("vmtemplates");
                }
                return _vmtemplates;
            }
        }
        private ObjectSet<vmtemplate> _vmtemplates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts(account account)
        {
            base.AddObject("accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the branchgroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobranchgroups(branchgroup branchgroup)
        {
            base.AddObject("branchgroups", branchgroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the branchinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobranchinfoes(branchinfo branchinfo)
        {
            base.AddObject("branchinfoes", branchinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cipdatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocipdatas(cipdata cipdata)
        {
            base.AddObject("cipdatas", cipdata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the clientmachines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToclientmachines(clientmachine clientmachine)
        {
            base.AddObject("clientmachines", clientmachine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contentlibraries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontentlibraries(contentlibrary contentlibrary)
        {
            base.AddObject("contentlibraries", contentlibrary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customactioninfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomactioninfoes(customactioninfo customactioninfo)
        {
            base.AddObject("customactioninfoes", customactioninfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the geosites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogeosites(geosite geosite)
        {
            base.AddObject("geosites", geosite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the groupsinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogroupsinfoes(groupsinfo groupsinfo)
        {
            base.AddObject("groupsinfoes", groupsinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the hostinfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTohostinfos(hostinfo hostinfo)
        {
            base.AddObject("hostinfos", hostinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the imagecontents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToimagecontents(imagecontent imagecontent)
        {
            base.AddObject("imagecontents", imagecontent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the imageshistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToimageshistories(imageshistory imageshistory)
        {
            base.AddObject("imageshistories", imageshistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the imagetypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToimagetypes(imagetype imagetype)
        {
            base.AddObject("imagetypes", imagetype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the inventorinstalloptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinventorinstalloptions(inventorinstalloption inventorinstalloption)
        {
            base.AddObject("inventorinstalloptions", inventorinstalloption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTojobs(job job)
        {
            base.AddObject("jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the jobtypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTojobtypes(jobtype jobtype)
        {
            base.AddObject("jobtypes", jobtype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolanguages(language language)
        {
            base.AddObject("languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the monitorsettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomonitorsettings(monitorsetting monitorsetting)
        {
            base.AddObject("monitorsettings", monitorsetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the namingpatterns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonamingpatterns(namingpattern namingpattern)
        {
            base.AddObject("namingpatterns", namingpattern);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the notifyemailtargets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTonotifyemailtargets(notifyemailtarget notifyemailtarget)
        {
            base.AddObject("notifyemailtargets", notifyemailtarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the platformgroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplatformgroups(platformgroup platformgroup)
        {
            base.AddObject("platformgroups", platformgroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the platforms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplatforms(platform platform)
        {
            base.AddObject("platforms", platform);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the productbuilds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToproductbuilds(productbuild productbuild)
        {
            base.AddObject("productbuilds", productbuild);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the productgroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToproductgroups(productgroup productgroup)
        {
            base.AddObject("productgroups", productgroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the productpatterns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToproductpatterns(productpattern productpattern)
        {
            base.AddObject("productpatterns", productpattern);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the producttypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToproducttypes(producttype producttype)
        {
            base.AddObject("producttypes", producttype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the programtools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprogramtools(programtool programtool)
        {
            base.AddObject("programtools", programtool);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the publishtargetsinfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopublishtargetsinfoes(publishtargetsinfo publishtargetsinfo)
        {
            base.AddObject("publishtargetsinfoes", publishtargetsinfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the serveralias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToserveralias(serveralia serveralia)
        {
            base.AddObject("serveralias", serveralia);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the statusmessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostatusmessages(statusmessage statusmessage)
        {
            base.AddObject("statusmessages", statusmessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the statustypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostatustypes(statustype statustype)
        {
            base.AddObject("statustypes", statustype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usagegroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousagegroups(usagegroup usagegroup)
        {
            base.AddObject("usagegroups", usagegroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usagetypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousagetypes(usagetype usagetype)
        {
            base.AddObject("usagetypes", usagetype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the veecustomactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToveecustomactions(veecustomaction veecustomaction)
        {
            base.AddObject("veecustomactions", veecustomaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the veeservices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToveeservices(veeservice veeservice)
        {
            base.AddObject("veeservices", veeservice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the versionsids EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToversionsids(versionsid versionsid)
        {
            base.AddObject("versionsids", versionsid);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vimserverstorages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovimserverstorages(vimserverstorage vimserverstorage)
        {
            base.AddObject("vimserverstorages", vimserverstorage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vmtemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovmtemplates(vmtemplate vmtemplate)
        {
            base.AddObject("vmtemplates", vmtemplate);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="account_id">Initial value of the account_id property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="accountname">Initial value of the accountname property.</param>
        /// <param name="domain">Initial value of the domain property.</param>
        /// <param name="createtime">Initial value of the createtime property.</param>
        /// <param name="modtime">Initial value of the modtime property.</param>
        public static account Createaccount(global::System.Int64 account_id, global::System.String password, global::System.String accountname, global::System.String domain, global::System.DateTime createtime, global::System.DateTime modtime)
        {
            account account = new account();
            account.account_id = account_id;
            account.password = password;
            account.accountname = accountname;
            account.domain = domain;
            account.createtime = createtime;
            account.modtime = modtime;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 account_id
        {
            get
            {
                return _account_id;
            }
            set
            {
                if (_account_id != value)
                {
                    Onaccount_idChanging(value);
                    ReportPropertyChanging("account_id");
                    _account_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("account_id");
                    Onaccount_idChanged();
                }
            }
        }
        private global::System.Int64 _account_id;
        partial void Onaccount_idChanging(global::System.Int64 value);
        partial void Onaccount_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String accountname
        {
            get
            {
                return _accountname;
            }
            set
            {
                OnaccountnameChanging(value);
                ReportPropertyChanging("accountname");
                _accountname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("accountname");
                OnaccountnameChanged();
            }
        }
        private global::System.String _accountname;
        partial void OnaccountnameChanging(global::System.String value);
        partial void OnaccountnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String domain
        {
            get
            {
                return _domain;
            }
            set
            {
                OndomainChanging(value);
                ReportPropertyChanging("domain");
                _domain = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("domain");
                OndomainChanged();
            }
        }
        private global::System.String _domain;
        partial void OndomainChanging(global::System.String value);
        partial void OndomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String usage
        {
            get
            {
                return _usage;
            }
            set
            {
                OnusageChanging(value);
                ReportPropertyChanging("usage");
                _usage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("usage");
                OnusageChanged();
            }
        }
        private global::System.String _usage;
        partial void OnusageChanging(global::System.String value);
        partial void OnusageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private global::System.DateTime _createtime;
        partial void OncreatetimeChanging(global::System.DateTime value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modtime
        {
            get
            {
                return _modtime;
            }
            set
            {
                OnmodtimeChanging(value);
                ReportPropertyChanging("modtime");
                _modtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtime");
                OnmodtimeChanged();
            }
        }
        private global::System.DateTime _modtime;
        partial void OnmodtimeChanging(global::System.DateTime value);
        partial void OnmodtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="branchgroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class branchgroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new branchgroup object.
        /// </summary>
        /// <param name="idBranchGroups">Initial value of the idBranchGroups property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        public static branchgroup Createbranchgroup(global::System.Int64 idBranchGroups, global::System.Int64 branch_id, global::System.Int64 group_id)
        {
            branchgroup branchgroup = new branchgroup();
            branchgroup.idBranchGroups = idBranchGroups;
            branchgroup.branch_id = branch_id;
            branchgroup.group_id = group_id;
            return branchgroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idBranchGroups
        {
            get
            {
                return _idBranchGroups;
            }
            set
            {
                if (_idBranchGroups != value)
                {
                    OnidBranchGroupsChanging(value);
                    ReportPropertyChanging("idBranchGroups");
                    _idBranchGroups = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idBranchGroups");
                    OnidBranchGroupsChanged();
                }
            }
        }
        private global::System.Int64 _idBranchGroups;
        partial void OnidBranchGroupsChanging(global::System.Int64 value);
        partial void OnidBranchGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int64 _group_id;
        partial void Ongroup_idChanging(global::System.Int64 value);
        partial void Ongroup_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_branchgroups_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_branchgroups_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_branchgroups_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_branchgroups_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_branchgroups_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_branchgroups_group", "groupsinfo")]
        public groupsinfo groupsinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_branchgroups_group", "groupsinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_branchgroups_group", "groupsinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupsinfo> groupsinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_branchgroups_group", "groupsinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<groupsinfo>("veedatatest5Model.FK_branchgroups_group", "groupsinfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="branchinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class branchinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new branchinfo object.
        /// </summary>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="branch_str">Initial value of the branch_str property.</param>
        public static branchinfo Createbranchinfo(global::System.Int64 branch_id, global::System.String branch_str)
        {
            branchinfo branchinfo = new branchinfo();
            branchinfo.branch_id = branch_id;
            branchinfo.branch_str = branch_str;
            return branchinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                if (_branch_id != value)
                {
                    Onbranch_idChanging(value);
                    ReportPropertyChanging("branch_id");
                    _branch_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("branch_id");
                    Onbranch_idChanged();
                }
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String branch_str
        {
            get
            {
                return _branch_str;
            }
            set
            {
                Onbranch_strChanging(value);
                ReportPropertyChanging("branch_str");
                _branch_str = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("branch_str");
                Onbranch_strChanged();
            }
        }
        private global::System.String _branch_str;
        partial void Onbranch_strChanging(global::System.String value);
        partial void Onbranch_strChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String project
        {
            get
            {
                return _project;
            }
            set
            {
                OnprojectChanging(value);
                ReportPropertyChanging("project");
                _project = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("project");
                OnprojectChanged();
            }
        }
        private global::System.String _project;
        partial void OnprojectChanging(global::System.String value);
        partial void OnprojectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private global::System.String _version;
        partial void OnversionChanging(global::System.String value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_branchgroups_branch", "branchgroups")]
        public EntityCollection<branchgroup> branchgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<branchgroup>("veedatatest5Model.FK_branchgroups_branch", "branchgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<branchgroup>("veedatatest5Model.FK_branchgroups_branch", "branchgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_contentlibrarylocations_branch", "contentlibraries")]
        public EntityCollection<contentlibrary> contentlibraries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contentlibrary>("veedatatest5Model.FK_contentlibrarylocations_branch", "contentlibraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contentlibrary>("veedatatest5Model.FK_contentlibrarylocations_branch", "contentlibraries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_branch", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_branch", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_branch", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_inventorinstalloptions_branch", "inventorinstalloptions")]
        public EntityCollection<inventorinstalloption> inventorinstalloptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inventorinstalloption>("veedatatest5Model.FK_inventorinstalloptions_branch", "inventorinstalloptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inventorinstalloption>("veedatatest5Model.FK_inventorinstalloptions_branch", "inventorinstalloptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_branch", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_branch", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_branch", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productbuilds_branch", "productbuilds")]
        public EntityCollection<productbuild> productbuilds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productbuild>("veedatatest5Model.FK_productbuilds_branch", "productbuilds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productbuild>("veedatatest5Model.FK_productbuilds_branch", "productbuilds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Branches", "veecustomactions")]
        public EntityCollection<veecustomaction> veecustomactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Branches", "veecustomactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Branches", "veecustomactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_branch", "vimserverstorage")]
        public EntityCollection<vimserverstorage> vimserverstorages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_branch", "vimserverstorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_branch", "vimserverstorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_branch", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_branch", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_branch", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="cipdata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cipdata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cipdata object.
        /// </summary>
        /// <param name="cipdata_id">Initial value of the cipdata_id property.</param>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="image_id">Initial value of the image_id property.</param>
        /// <param name="accesstime">Initial value of the accesstime property.</param>
        /// <param name="action">Initial value of the action property.</param>
        /// <param name="timecost">Initial value of the timecost property.</param>
        /// <param name="bandwidth">Initial value of the bandwidth property.</param>
        /// <param name="version_id">Initial value of the version_id property.</param>
        /// <param name="machine_id">Initial value of the machine_id property.</param>
        /// <param name="host_id">Initial value of the host_id property.</param>
        /// <param name="statustype_id">Initial value of the statustype_id property.</param>
        /// <param name="statusmsg_id">Initial value of the statusmsg_id property.</param>
        public static cipdata Createcipdata(global::System.Decimal cipdata_id, global::System.Int64 user_id, global::System.Int32 geosite_id, global::System.Decimal image_id, global::System.DateTimeOffset accesstime, global::System.String action, global::System.Double timecost, global::System.String bandwidth, global::System.Int64 version_id, global::System.Int64 machine_id, global::System.Int64 host_id, global::System.Int64 statustype_id, global::System.Int64 statusmsg_id)
        {
            cipdata cipdata = new cipdata();
            cipdata.cipdata_id = cipdata_id;
            cipdata.user_id = user_id;
            cipdata.geosite_id = geosite_id;
            cipdata.image_id = image_id;
            cipdata.accesstime = accesstime;
            cipdata.action = action;
            cipdata.timecost = timecost;
            cipdata.bandwidth = bandwidth;
            cipdata.version_id = version_id;
            cipdata.machine_id = machine_id;
            cipdata.host_id = host_id;
            cipdata.statustype_id = statustype_id;
            cipdata.statusmsg_id = statusmsg_id;
            return cipdata;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal cipdata_id
        {
            get
            {
                return _cipdata_id;
            }
            set
            {
                if (_cipdata_id != value)
                {
                    Oncipdata_idChanging(value);
                    ReportPropertyChanging("cipdata_id");
                    _cipdata_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cipdata_id");
                    Oncipdata_idChanged();
                }
            }
        }
        private global::System.Decimal _cipdata_id;
        partial void Oncipdata_idChanging(global::System.Decimal value);
        partial void Oncipdata_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                Onuser_idChanging(value);
                ReportPropertyChanging("user_id");
                _user_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("user_id");
                Onuser_idChanged();
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal image_id
        {
            get
            {
                return _image_id;
            }
            set
            {
                Onimage_idChanging(value);
                ReportPropertyChanging("image_id");
                _image_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("image_id");
                Onimage_idChanged();
            }
        }
        private global::System.Decimal _image_id;
        partial void Onimage_idChanging(global::System.Decimal value);
        partial void Onimage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset accesstime
        {
            get
            {
                return _accesstime;
            }
            set
            {
                OnaccesstimeChanging(value);
                ReportPropertyChanging("accesstime");
                _accesstime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accesstime");
                OnaccesstimeChanged();
            }
        }
        private global::System.DateTimeOffset _accesstime;
        partial void OnaccesstimeChanging(global::System.DateTimeOffset value);
        partial void OnaccesstimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String action
        {
            get
            {
                return _action;
            }
            set
            {
                OnactionChanging(value);
                ReportPropertyChanging("action");
                _action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("action");
                OnactionChanged();
            }
        }
        private global::System.String _action;
        partial void OnactionChanging(global::System.String value);
        partial void OnactionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double timecost
        {
            get
            {
                return _timecost;
            }
            set
            {
                OntimecostChanging(value);
                ReportPropertyChanging("timecost");
                _timecost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timecost");
                OntimecostChanged();
            }
        }
        private global::System.Double _timecost;
        partial void OntimecostChanging(global::System.Double value);
        partial void OntimecostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String bandwidth
        {
            get
            {
                return _bandwidth;
            }
            set
            {
                OnbandwidthChanging(value);
                ReportPropertyChanging("bandwidth");
                _bandwidth = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("bandwidth");
                OnbandwidthChanged();
            }
        }
        private global::System.String _bandwidth;
        partial void OnbandwidthChanging(global::System.String value);
        partial void OnbandwidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 version_id
        {
            get
            {
                return _version_id;
            }
            set
            {
                Onversion_idChanging(value);
                ReportPropertyChanging("version_id");
                _version_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version_id");
                Onversion_idChanged();
            }
        }
        private global::System.Int64 _version_id;
        partial void Onversion_idChanging(global::System.Int64 value);
        partial void Onversion_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 machine_id
        {
            get
            {
                return _machine_id;
            }
            set
            {
                Onmachine_idChanging(value);
                ReportPropertyChanging("machine_id");
                _machine_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("machine_id");
                Onmachine_idChanged();
            }
        }
        private global::System.Int64 _machine_id;
        partial void Onmachine_idChanging(global::System.Int64 value);
        partial void Onmachine_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 host_id
        {
            get
            {
                return _host_id;
            }
            set
            {
                Onhost_idChanging(value);
                ReportPropertyChanging("host_id");
                _host_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("host_id");
                Onhost_idChanged();
            }
        }
        private global::System.Int64 _host_id;
        partial void Onhost_idChanging(global::System.Int64 value);
        partial void Onhost_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statustype_id
        {
            get
            {
                return _statustype_id;
            }
            set
            {
                Onstatustype_idChanging(value);
                ReportPropertyChanging("statustype_id");
                _statustype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statustype_id");
                Onstatustype_idChanged();
            }
        }
        private global::System.Int64 _statustype_id;
        partial void Onstatustype_idChanging(global::System.Int64 value);
        partial void Onstatustype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statusmsg_id
        {
            get
            {
                return _statusmsg_id;
            }
            set
            {
                Onstatusmsg_idChanging(value);
                ReportPropertyChanging("statusmsg_id");
                _statusmsg_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statusmsg_id");
                Onstatusmsg_idChanged();
            }
        }
        private global::System.Int64 _statusmsg_id;
        partial void Onstatusmsg_idChanging(global::System.Int64 value);
        partial void Onstatusmsg_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_cipdata_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_cipdata_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_cipdata_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_cipdata_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_host", "hostinfos")]
        public hostinfo hostinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hostinfo>("veedatatest5Model.FK_cipdata_host", "hostinfos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hostinfo>("veedatatest5Model.FK_cipdata_host", "hostinfos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<hostinfo> hostinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<hostinfo>("veedatatest5Model.FK_cipdata_host", "hostinfos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<hostinfo>("veedatatest5Model.FK_cipdata_host", "hostinfos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_image", "imageshistory")]
        public imageshistory imageshistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_cipdata_image", "imageshistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_cipdata_image", "imageshistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<imageshistory> imageshistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_cipdata_image", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<imageshistory>("veedatatest5Model.FK_cipdata_image", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_machine", "clientmachines")]
        public clientmachine clientmachine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clientmachine>("veedatatest5Model.FK_cipdata_machine", "clientmachines").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clientmachine>("veedatatest5Model.FK_cipdata_machine", "clientmachines").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<clientmachine> clientmachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<clientmachine>("veedatatest5Model.FK_cipdata_machine", "clientmachines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<clientmachine>("veedatatest5Model.FK_cipdata_machine", "clientmachines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_statusmsg", "statusmessages")]
        public statusmessage statusmessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_cipdata_statusmsg", "statusmessages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_cipdata_statusmsg", "statusmessages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statusmessage> statusmessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_cipdata_statusmsg", "statusmessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statusmessage>("veedatatest5Model.FK_cipdata_statusmsg", "statusmessages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_statustype", "statustype")]
        public statustype statustype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_cipdata_statustype", "statustype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_cipdata_statustype", "statustype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statustype> statustypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_cipdata_statustype", "statustype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statustype>("veedatatest5Model.FK_cipdata_statustype", "statustype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_user", "users")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("veedatatest5Model.FK_cipdata_user", "users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("veedatatest5Model.FK_cipdata_user", "users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("veedatatest5Model.FK_cipdata_user", "users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("veedatatest5Model.FK_cipdata_user", "users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_version", "versionsid")]
        public versionsid versionsid
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<versionsid>("veedatatest5Model.FK_cipdata_version", "versionsid").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<versionsid>("veedatatest5Model.FK_cipdata_version", "versionsid").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<versionsid> versionsidReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<versionsid>("veedatatest5Model.FK_cipdata_version", "versionsid");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<versionsid>("veedatatest5Model.FK_cipdata_version", "versionsid", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="clientmachine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class clientmachine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new clientmachine object.
        /// </summary>
        /// <param name="machine_id">Initial value of the machine_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static clientmachine Createclientmachine(global::System.Int64 machine_id, global::System.String name)
        {
            clientmachine clientmachine = new clientmachine();
            clientmachine.machine_id = machine_id;
            clientmachine.name = name;
            return clientmachine;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 machine_id
        {
            get
            {
                return _machine_id;
            }
            set
            {
                if (_machine_id != value)
                {
                    Onmachine_idChanging(value);
                    ReportPropertyChanging("machine_id");
                    _machine_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("machine_id");
                    Onmachine_idChanged();
                }
            }
        }
        private global::System.Int64 _machine_id;
        partial void Onmachine_idChanging(global::System.Int64 value);
        partial void Onmachine_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_machine", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_machine", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_machine", "cipdata", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="contentlibrary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contentlibrary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contentlibrary object.
        /// </summary>
        /// <param name="idLibLocation">Initial value of the idLibLocation property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="zip_path">Initial value of the zip_path property.</param>
        /// <param name="build">Initial value of the build property.</param>
        public static contentlibrary Createcontentlibrary(global::System.Int64 idLibLocation, global::System.Int32 geosite_id, global::System.Int64 branch_id, global::System.String zip_path, global::System.String build)
        {
            contentlibrary contentlibrary = new contentlibrary();
            contentlibrary.idLibLocation = idLibLocation;
            contentlibrary.geosite_id = geosite_id;
            contentlibrary.branch_id = branch_id;
            contentlibrary.zip_path = zip_path;
            contentlibrary.build = build;
            return contentlibrary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idLibLocation
        {
            get
            {
                return _idLibLocation;
            }
            set
            {
                if (_idLibLocation != value)
                {
                    OnidLibLocationChanging(value);
                    ReportPropertyChanging("idLibLocation");
                    _idLibLocation = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idLibLocation");
                    OnidLibLocationChanged();
                }
            }
        }
        private global::System.Int64 _idLibLocation;
        partial void OnidLibLocationChanging(global::System.Int64 value);
        partial void OnidLibLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String zip_path
        {
            get
            {
                return _zip_path;
            }
            set
            {
                Onzip_pathChanging(value);
                ReportPropertyChanging("zip_path");
                _zip_path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("zip_path");
                Onzip_pathChanged();
            }
        }
        private global::System.String _zip_path;
        partial void Onzip_pathChanging(global::System.String value);
        partial void Onzip_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String inventor_build
        {
            get
            {
                return _inventor_build;
            }
            set
            {
                Oninventor_buildChanging(value);
                ReportPropertyChanging("inventor_build");
                _inventor_build = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("inventor_build");
                Oninventor_buildChanged();
            }
        }
        private global::System.String _inventor_build;
        partial void Oninventor_buildChanging(global::System.String value);
        partial void Oninventor_buildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String build
        {
            get
            {
                return _build;
            }
            set
            {
                OnbuildChanging(value);
                ReportPropertyChanging("build");
                _build = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("build");
                OnbuildChanged();
            }
        }
        private global::System.String _build;
        partial void OnbuildChanging(global::System.String value);
        partial void OnbuildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String edm_build
        {
            get
            {
                return _edm_build;
            }
            set
            {
                Onedm_buildChanging(value);
                ReportPropertyChanging("edm_build");
                _edm_build = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("edm_build");
                Onedm_buildChanged();
            }
        }
        private global::System.String _edm_build;
        partial void Onedm_buildChanging(global::System.String value);
        partial void Onedm_buildChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_contentlibrarylocations_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_contentlibrarylocations_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_contentlibrarylocations_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_contentlibrarylocations_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_contentlibrarylocations_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_contentlibrarylocations_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_contentlibrarylocations_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_contentlibrarylocations_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_contentlibrarylocations_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_contentlibrarylocations_geosite", "geosites", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="customactioninfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customactioninfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customactioninfo object.
        /// </summary>
        /// <param name="action_ID">Initial value of the Action_ID property.</param>
        /// <param name="program_location">Initial value of the Program_location property.</param>
        public static customactioninfo Createcustomactioninfo(global::System.Int64 action_ID, global::System.String program_location)
        {
            customactioninfo customactioninfo = new customactioninfo();
            customactioninfo.Action_ID = action_ID;
            customactioninfo.Program_location = program_location;
            return customactioninfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Action_ID
        {
            get
            {
                return _Action_ID;
            }
            set
            {
                if (_Action_ID != value)
                {
                    OnAction_IDChanging(value);
                    ReportPropertyChanging("Action_ID");
                    _Action_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Action_ID");
                    OnAction_IDChanged();
                }
            }
        }
        private global::System.Int64 _Action_ID;
        partial void OnAction_IDChanging(global::System.Int64 value);
        partial void OnAction_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Program_location
        {
            get
            {
                return _Program_location;
            }
            set
            {
                OnProgram_locationChanging(value);
                ReportPropertyChanging("Program_location");
                _Program_location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Program_location");
                OnProgram_locationChanged();
            }
        }
        private global::System.String _Program_location;
        partial void OnProgram_locationChanging(global::System.String value);
        partial void OnProgram_locationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String program_arguments
        {
            get
            {
                return _program_arguments;
            }
            set
            {
                Onprogram_argumentsChanging(value);
                ReportPropertyChanging("program_arguments");
                _program_arguments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("program_arguments");
                Onprogram_argumentsChanged();
            }
        }
        private global::System.String _program_arguments;
        partial void Onprogram_argumentsChanging(global::System.String value);
        partial void Onprogram_argumentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String program_custom_files
        {
            get
            {
                return _program_custom_files;
            }
            set
            {
                Onprogram_custom_filesChanging(value);
                ReportPropertyChanging("program_custom_files");
                _program_custom_files = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("program_custom_files");
                Onprogram_custom_filesChanged();
            }
        }
        private global::System.String _program_custom_files;
        partial void Onprogram_custom_filesChanging(global::System.String value);
        partial void Onprogram_custom_filesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_CustomActionInfo", "veecustomactions")]
        public EntityCollection<veecustomaction> veecustomactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "veecustomactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "veecustomactions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="geosite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class geosite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new geosite object.
        /// </summary>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="iPRange">Initial value of the IPRange property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="networkLicenseServer">Initial value of the NetworkLicenseServer property.</param>
        /// <param name="watchFilepath">Initial value of the WatchFilepath property.</param>
        /// <param name="bRENotifyFolder">Initial value of the BRENotifyFolder property.</param>
        /// <param name="notifyinfo_id">Initial value of the notifyinfo_id property.</param>
        public static geosite Creategeosite(global::System.Int32 geosite_id, global::System.String iPRange, global::System.String name, global::System.String networkLicenseServer, global::System.String watchFilepath, global::System.String bRENotifyFolder, global::System.Int64 notifyinfo_id)
        {
            geosite geosite = new geosite();
            geosite.geosite_id = geosite_id;
            geosite.IPRange = iPRange;
            geosite.Name = name;
            geosite.NetworkLicenseServer = networkLicenseServer;
            geosite.WatchFilepath = watchFilepath;
            geosite.BRENotifyFolder = bRENotifyFolder;
            geosite.notifyinfo_id = notifyinfo_id;
            return geosite;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                if (_geosite_id != value)
                {
                    Ongeosite_idChanging(value);
                    ReportPropertyChanging("geosite_id");
                    _geosite_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("geosite_id");
                    Ongeosite_idChanged();
                }
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPRange
        {
            get
            {
                return _IPRange;
            }
            set
            {
                OnIPRangeChanging(value);
                ReportPropertyChanging("IPRange");
                _IPRange = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPRange");
                OnIPRangeChanged();
            }
        }
        private global::System.String _IPRange;
        partial void OnIPRangeChanging(global::System.String value);
        partial void OnIPRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuildStore
        {
            get
            {
                return _BuildStore;
            }
            set
            {
                OnBuildStoreChanging(value);
                ReportPropertyChanging("BuildStore");
                _BuildStore = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuildStore");
                OnBuildStoreChanged();
            }
        }
        private global::System.String _BuildStore;
        partial void OnBuildStoreChanging(global::System.String value);
        partial void OnBuildStoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfigFile
        {
            get
            {
                return _ConfigFile;
            }
            set
            {
                OnConfigFileChanging(value);
                ReportPropertyChanging("ConfigFile");
                _ConfigFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfigFile");
                OnConfigFileChanged();
            }
        }
        private global::System.String _ConfigFile;
        partial void OnConfigFileChanging(global::System.String value);
        partial void OnConfigFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetworkLicenseServer
        {
            get
            {
                return _NetworkLicenseServer;
            }
            set
            {
                OnNetworkLicenseServerChanging(value);
                ReportPropertyChanging("NetworkLicenseServer");
                _NetworkLicenseServer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NetworkLicenseServer");
                OnNetworkLicenseServerChanged();
            }
        }
        private global::System.String _NetworkLicenseServer;
        partial void OnNetworkLicenseServerChanging(global::System.String value);
        partial void OnNetworkLicenseServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondNetworkLicSrv
        {
            get
            {
                return _SecondNetworkLicSrv;
            }
            set
            {
                OnSecondNetworkLicSrvChanging(value);
                ReportPropertyChanging("SecondNetworkLicSrv");
                _SecondNetworkLicSrv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecondNetworkLicSrv");
                OnSecondNetworkLicSrvChanged();
            }
        }
        private global::System.String _SecondNetworkLicSrv;
        partial void OnSecondNetworkLicSrvChanging(global::System.String value);
        partial void OnSecondNetworkLicSrvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchFilepath
        {
            get
            {
                return _WatchFilepath;
            }
            set
            {
                OnWatchFilepathChanging(value);
                ReportPropertyChanging("WatchFilepath");
                _WatchFilepath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatchFilepath");
                OnWatchFilepathChanged();
            }
        }
        private global::System.String _WatchFilepath;
        partial void OnWatchFilepathChanging(global::System.String value);
        partial void OnWatchFilepathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BRENotifyFolder
        {
            get
            {
                return _BRENotifyFolder;
            }
            set
            {
                OnBRENotifyFolderChanging(value);
                ReportPropertyChanging("BRENotifyFolder");
                _BRENotifyFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BRENotifyFolder");
                OnBRENotifyFolderChanged();
            }
        }
        private global::System.String _BRENotifyFolder;
        partial void OnBRENotifyFolderChanging(global::System.String value);
        partial void OnBRENotifyFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _createtime;
        partial void OncreatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> modtime
        {
            get
            {
                return _modtime;
            }
            set
            {
                OnmodtimeChanging(value);
                ReportPropertyChanging("modtime");
                _modtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtime");
                OnmodtimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _modtime;
        partial void OnmodtimeChanging(Nullable<global::System.DateTime> value);
        partial void OnmodtimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 notifyinfo_id
        {
            get
            {
                return _notifyinfo_id;
            }
            set
            {
                Onnotifyinfo_idChanging(value);
                ReportPropertyChanging("notifyinfo_id");
                _notifyinfo_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notifyinfo_id");
                Onnotifyinfo_idChanged();
            }
        }
        private global::System.Int64 _notifyinfo_id;
        partial void Onnotifyinfo_idChanging(global::System.Int64 value);
        partial void Onnotifyinfo_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_geosite", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_geosite", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_geosite", "cipdata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_contentlibrarylocations_geosite", "contentlibraries")]
        public EntityCollection<contentlibrary> contentlibraries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contentlibrary>("veedatatest5Model.FK_contentlibrarylocations_geosite", "contentlibraries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contentlibrary>("veedatatest5Model.FK_contentlibrarylocations_geosite", "contentlibraries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_geosites_notify", "notifyemailtargets")]
        public notifyemailtarget notifyemailtarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_geosites_notify", "notifyemailtargets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_geosites_notify", "notifyemailtargets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notifyemailtarget> notifyemailtargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_geosites_notify", "notifyemailtargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notifyemailtarget>("veedatatest5Model.FK_geosites_notify", "notifyemailtargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_geosite", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_geosite", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_geosite", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productbuilds_geosite", "productbuilds")]
        public EntityCollection<productbuild> productbuilds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productbuild>("veedatatest5Model.FK_productbuilds_geosite", "productbuilds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productbuild>("veedatatest5Model.FK_productbuilds_geosite", "productbuilds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_publishtargetsinfo_geosite", "publishtargetsinfo")]
        public EntityCollection<publishtargetsinfo> publishtargetsinfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<publishtargetsinfo>("veedatatest5Model.FK_publishtargetsinfo_geosite", "publishtargetsinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<publishtargetsinfo>("veedatatest5Model.FK_publishtargetsinfo_geosite", "publishtargetsinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_geosite", "veeservices")]
        public EntityCollection<veeservice> veeservices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_geosite", "veeservices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_geosite", "veeservices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_geosite", "vimserverstorage")]
        public EntityCollection<vimserverstorage> vimserverstorages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_geosite", "vimserverstorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_geosite", "vimserverstorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_geosite", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_geosite", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_geosite", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="groupsinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class groupsinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new groupsinfo object.
        /// </summary>
        /// <param name="idGroupsInfo">Initial value of the idGroupsInfo property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="groupType">Initial value of the GroupType property.</param>
        public static groupsinfo Creategroupsinfo(global::System.Int64 idGroupsInfo, global::System.String name, global::System.String description, global::System.String groupType)
        {
            groupsinfo groupsinfo = new groupsinfo();
            groupsinfo.idGroupsInfo = idGroupsInfo;
            groupsinfo.Name = name;
            groupsinfo.Description = description;
            groupsinfo.GroupType = groupType;
            return groupsinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idGroupsInfo
        {
            get
            {
                return _idGroupsInfo;
            }
            set
            {
                if (_idGroupsInfo != value)
                {
                    OnidGroupsInfoChanging(value);
                    ReportPropertyChanging("idGroupsInfo");
                    _idGroupsInfo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idGroupsInfo");
                    OnidGroupsInfoChanged();
                }
            }
        }
        private global::System.Int64 _idGroupsInfo;
        partial void OnidGroupsInfoChanging(global::System.Int64 value);
        partial void OnidGroupsInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupType
        {
            get
            {
                return _GroupType;
            }
            set
            {
                OnGroupTypeChanging(value);
                ReportPropertyChanging("GroupType");
                _GroupType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupType");
                OnGroupTypeChanged();
            }
        }
        private global::System.String _GroupType;
        partial void OnGroupTypeChanging(global::System.String value);
        partial void OnGroupTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_branchgroups_group", "branchgroups")]
        public EntityCollection<branchgroup> branchgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<branchgroup>("veedatatest5Model.FK_branchgroups_group", "branchgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<branchgroup>("veedatatest5Model.FK_branchgroups_group", "branchgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platformgroups_group", "platformgroups")]
        public EntityCollection<platformgroup> platformgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<platformgroup>("veedatatest5Model.FK_platformgroups_group", "platformgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<platformgroup>("veedatatest5Model.FK_platformgroups_group", "platformgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productgroups_group", "productgroups")]
        public EntityCollection<productgroup> productgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productgroup>("veedatatest5Model.FK_productgroups_group", "productgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productgroup>("veedatatest5Model.FK_productgroups_group", "productgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_usagegroups_group", "usagegroups")]
        public EntityCollection<usagegroup> usagegroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usagegroup>("veedatatest5Model.FK_usagegroups_group", "usagegroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usagegroup>("veedatatest5Model.FK_usagegroups_group", "usagegroups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="hostinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class hostinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new hostinfo object.
        /// </summary>
        /// <param name="host_id">Initial value of the host_id property.</param>
        /// <param name="oSTYPE">Initial value of the OSTYPE property.</param>
        /// <param name="oSVersion">Initial value of the OSVersion property.</param>
        public static hostinfo Createhostinfo(global::System.Int64 host_id, global::System.String oSTYPE, global::System.String oSVersion)
        {
            hostinfo hostinfo = new hostinfo();
            hostinfo.host_id = host_id;
            hostinfo.OSTYPE = oSTYPE;
            hostinfo.OSVersion = oSVersion;
            return hostinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 host_id
        {
            get
            {
                return _host_id;
            }
            set
            {
                if (_host_id != value)
                {
                    Onhost_idChanging(value);
                    ReportPropertyChanging("host_id");
                    _host_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("host_id");
                    Onhost_idChanged();
                }
            }
        }
        private global::System.Int64 _host_id;
        partial void Onhost_idChanging(global::System.Int64 value);
        partial void Onhost_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OSTYPE
        {
            get
            {
                return _OSTYPE;
            }
            set
            {
                OnOSTYPEChanging(value);
                ReportPropertyChanging("OSTYPE");
                _OSTYPE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OSTYPE");
                OnOSTYPEChanged();
            }
        }
        private global::System.String _OSTYPE;
        partial void OnOSTYPEChanging(global::System.String value);
        partial void OnOSTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OSVersion
        {
            get
            {
                return _OSVersion;
            }
            set
            {
                OnOSVersionChanging(value);
                ReportPropertyChanging("OSVersion");
                _OSVersion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OSVersion");
                OnOSVersionChanged();
            }
        }
        private global::System.String _OSVersion;
        partial void OnOSVersionChanging(global::System.String value);
        partial void OnOSVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_host", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_host", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_host", "cipdata", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="imagecontent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class imagecontent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new imagecontent object.
        /// </summary>
        /// <param name="content_id">Initial value of the content_id property.</param>
        public static imagecontent Createimagecontent(global::System.Int64 content_id)
        {
            imagecontent imagecontent = new imagecontent();
            imagecontent.content_id = content_id;
            return imagecontent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 content_id
        {
            get
            {
                return _content_id;
            }
            set
            {
                if (_content_id != value)
                {
                    Oncontent_idChanging(value);
                    ReportPropertyChanging("content_id");
                    _content_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("content_id");
                    Oncontent_idChanged();
                }
            }
        }
        private global::System.Int64 _content_id;
        partial void Oncontent_idChanging(global::System.Int64 value);
        partial void Oncontent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tools
        {
            get
            {
                return _Tools;
            }
            set
            {
                OnToolsChanging(value);
                ReportPropertyChanging("Tools");
                _Tools = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tools");
                OnToolsChanged();
            }
        }
        private global::System.String _Tools;
        partial void OnToolsChanging(global::System.String value);
        partial void OnToolsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Licenses
        {
            get
            {
                return _Licenses;
            }
            set
            {
                OnLicensesChanging(value);
                ReportPropertyChanging("Licenses");
                _Licenses = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Licenses");
                OnLicensesChanged();
            }
        }
        private global::System.String _Licenses;
        partial void OnLicensesChanging(global::System.String value);
        partial void OnLicensesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_content", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_content", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_content", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="imageshistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class imageshistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new imageshistory object.
        /// </summary>
        /// <param name="buildname">Initial value of the buildname property.</param>
        /// <param name="platform_id">Initial value of the platform_id property.</param>
        /// <param name="image_id">Initial value of the image_id property.</param>
        /// <param name="fullpath">Initial value of the fullpath property.</param>
        /// <param name="template_id">Initial value of the template_id property.</param>
        /// <param name="timecost">Initial value of the timecost property.</param>
        /// <param name="removestatus_id">Initial value of the removestatus_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="created">Initial value of the created property.</param>
        public static imageshistory Createimageshistory(global::System.String buildname, global::System.Int64 platform_id, global::System.Decimal image_id, global::System.String fullpath, global::System.Int64 template_id, global::System.Double timecost, global::System.Int64 removestatus_id, global::System.Int64 branch_id, global::System.DateTimeOffset created)
        {
            imageshistory imageshistory = new imageshistory();
            imageshistory.buildname = buildname;
            imageshistory.platform_id = platform_id;
            imageshistory.image_id = image_id;
            imageshistory.fullpath = fullpath;
            imageshistory.template_id = template_id;
            imageshistory.timecost = timecost;
            imageshistory.removestatus_id = removestatus_id;
            imageshistory.branch_id = branch_id;
            imageshistory.created = created;
            return imageshistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String buildname
        {
            get
            {
                return _buildname;
            }
            set
            {
                OnbuildnameChanging(value);
                ReportPropertyChanging("buildname");
                _buildname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("buildname");
                OnbuildnameChanged();
            }
        }
        private global::System.String _buildname;
        partial void OnbuildnameChanging(global::System.String value);
        partial void OnbuildnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                Onplatform_idChanging(value);
                ReportPropertyChanging("platform_id");
                _platform_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platform_id");
                Onplatform_idChanged();
            }
        }
        private global::System.Int64 _platform_id;
        partial void Onplatform_idChanging(global::System.Int64 value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal image_id
        {
            get
            {
                return _image_id;
            }
            set
            {
                if (_image_id != value)
                {
                    Onimage_idChanging(value);
                    ReportPropertyChanging("image_id");
                    _image_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("image_id");
                    Onimage_idChanged();
                }
            }
        }
        private global::System.Decimal _image_id;
        partial void Onimage_idChanging(global::System.Decimal value);
        partial void Onimage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullpath
        {
            get
            {
                return _fullpath;
            }
            set
            {
                OnfullpathChanging(value);
                ReportPropertyChanging("fullpath");
                _fullpath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullpath");
                OnfullpathChanged();
            }
        }
        private global::System.String _fullpath;
        partial void OnfullpathChanging(global::System.String value);
        partial void OnfullpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 template_id
        {
            get
            {
                return _template_id;
            }
            set
            {
                Ontemplate_idChanging(value);
                ReportPropertyChanging("template_id");
                _template_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("template_id");
                Ontemplate_idChanged();
            }
        }
        private global::System.Int64 _template_id;
        partial void Ontemplate_idChanging(global::System.Int64 value);
        partial void Ontemplate_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double timecost
        {
            get
            {
                return _timecost;
            }
            set
            {
                OntimecostChanging(value);
                ReportPropertyChanging("timecost");
                _timecost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timecost");
                OntimecostChanged();
            }
        }
        private global::System.Double _timecost;
        partial void OntimecostChanging(global::System.Double value);
        partial void OntimecostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 removestatus_id
        {
            get
            {
                return _removestatus_id;
            }
            set
            {
                Onremovestatus_idChanging(value);
                ReportPropertyChanging("removestatus_id");
                _removestatus_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("removestatus_id");
                Onremovestatus_idChanged();
            }
        }
        private global::System.Int64 _removestatus_id;
        partial void Onremovestatus_idChanging(global::System.Int64 value);
        partial void Onremovestatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProductType_id
        {
            get
            {
                return _ProductType_id;
            }
            set
            {
                OnProductType_idChanging(value);
                ReportPropertyChanging("ProductType_id");
                _ProductType_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductType_id");
                OnProductType_idChanged();
            }
        }
        private Nullable<global::System.Int64> _ProductType_id;
        partial void OnProductType_idChanging(Nullable<global::System.Int64> value);
        partial void OnProductType_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset created
        {
            get
            {
                return _created;
            }
            set
            {
                OncreatedChanging(value);
                ReportPropertyChanging("created");
                _created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created");
                OncreatedChanged();
            }
        }
        private global::System.DateTimeOffset _created;
        partial void OncreatedChanging(global::System.DateTimeOffset value);
        partial void OncreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> job_id
        {
            get
            {
                return _job_id;
            }
            set
            {
                Onjob_idChanging(value);
                ReportPropertyChanging("job_id");
                _job_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("job_id");
                Onjob_idChanged();
            }
        }
        private Nullable<global::System.Decimal> _job_id;
        partial void Onjob_idChanging(Nullable<global::System.Decimal> value);
        partial void Onjob_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String snapshotname
        {
            get
            {
                return _snapshotname;
            }
            set
            {
                OnsnapshotnameChanging(value);
                ReportPropertyChanging("snapshotname");
                _snapshotname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("snapshotname");
                OnsnapshotnameChanged();
            }
        }
        private global::System.String _snapshotname;
        partial void OnsnapshotnameChanging(global::System.String value);
        partial void OnsnapshotnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_imageshistory_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_imageshistory_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_imageshistory_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_imageshistory_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_image", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_image", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_image", "cipdata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_job", "jobs")]
        public job job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<job>("veedatatest5Model.FK_imageshistory_job", "jobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<job>("veedatatest5Model.FK_imageshistory_job", "jobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<job> jobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<job>("veedatatest5Model.FK_imageshistory_job", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<job>("veedatatest5Model.FK_imageshistory_job", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_platform", "platforms")]
        public platform platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_imageshistory_platform", "platforms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_imageshistory_platform", "platforms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platform> platformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_imageshistory_platform", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platform>("veedatatest5Model.FK_imageshistory_platform", "platforms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_imageshistory_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_imageshistory_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_imageshistory_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_imageshistory_producttype", "producttypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_removestatus", "statustype")]
        public statustype statustype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_imageshistory_removestatus", "statustype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_imageshistory_removestatus", "statustype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statustype> statustypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_imageshistory_removestatus", "statustype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statustype>("veedatatest5Model.FK_imageshistory_removestatus", "statustype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_template", "vmtemplates")]
        public vmtemplate vmtemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_imageshistory_template", "vmtemplates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_imageshistory_template", "vmtemplates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<vmtemplate> vmtemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_imageshistory_template", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<vmtemplate>("veedatatest5Model.FK_imageshistory_template", "vmtemplates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_image", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_image", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_image", "jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="imagetype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class imagetype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new imagetype object.
        /// </summary>
        /// <param name="imagetype_id">Initial value of the imagetype_id property.</param>
        /// <param name="type_str">Initial value of the type_str property.</param>
        public static imagetype Createimagetype(global::System.Int64 imagetype_id, global::System.String type_str)
        {
            imagetype imagetype = new imagetype();
            imagetype.imagetype_id = imagetype_id;
            imagetype.type_str = type_str;
            return imagetype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 imagetype_id
        {
            get
            {
                return _imagetype_id;
            }
            set
            {
                if (_imagetype_id != value)
                {
                    Onimagetype_idChanging(value);
                    ReportPropertyChanging("imagetype_id");
                    _imagetype_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("imagetype_id");
                    Onimagetype_idChanged();
                }
            }
        }
        private global::System.Int64 _imagetype_id;
        partial void Onimagetype_idChanging(global::System.Int64 value);
        partial void Onimagetype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type_str
        {
            get
            {
                return _type_str;
            }
            set
            {
                Ontype_strChanging(value);
                ReportPropertyChanging("type_str");
                _type_str = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type_str");
                Ontype_strChanged();
            }
        }
        private global::System.String _type_str;
        partial void Ontype_strChanging(global::System.String value);
        partial void Ontype_strChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_imagetype", "vimserverstorage")]
        public EntityCollection<vimserverstorage> vimserverstorages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_imagetype", "vimserverstorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_imagetype", "vimserverstorage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="inventorinstalloption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class inventorinstalloption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new inventorinstalloption object.
        /// </summary>
        /// <param name="option_id">Initial value of the option_id property.</param>
        /// <param name="productType_id">Initial value of the ProductType_id property.</param>
        /// <param name="serialNumber">Initial value of the SerialNumber property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="organization">Initial value of the Organization property.</param>
        /// <param name="installDir">Initial value of the InstallDir property.</param>
        /// <param name="installLevel">Initial value of the InstallLevel property.</param>
        /// <param name="productKey">Initial value of the ProductKey property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static inventorinstalloption Createinventorinstalloption(global::System.Int64 option_id, global::System.Int64 productType_id, global::System.String serialNumber, global::System.String lastName, global::System.String organization, global::System.String installDir, global::System.Int32 installLevel, global::System.String productKey, global::System.String version, global::System.String name, global::System.Int64 branch_id)
        {
            inventorinstalloption inventorinstalloption = new inventorinstalloption();
            inventorinstalloption.option_id = option_id;
            inventorinstalloption.ProductType_id = productType_id;
            inventorinstalloption.SerialNumber = serialNumber;
            inventorinstalloption.LastName = lastName;
            inventorinstalloption.Organization = organization;
            inventorinstalloption.InstallDir = installDir;
            inventorinstalloption.InstallLevel = installLevel;
            inventorinstalloption.ProductKey = productKey;
            inventorinstalloption.Version = version;
            inventorinstalloption.name = name;
            inventorinstalloption.branch_id = branch_id;
            return inventorinstalloption;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 option_id
        {
            get
            {
                return _option_id;
            }
            set
            {
                if (_option_id != value)
                {
                    Onoption_idChanging(value);
                    ReportPropertyChanging("option_id");
                    _option_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("option_id");
                    Onoption_idChanged();
                }
            }
        }
        private global::System.Int64 _option_id;
        partial void Onoption_idChanging(global::System.Int64 value);
        partial void Onoption_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductType_id
        {
            get
            {
                return _ProductType_id;
            }
            set
            {
                OnProductType_idChanging(value);
                ReportPropertyChanging("ProductType_id");
                _ProductType_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductType_id");
                OnProductType_idChanged();
            }
        }
        private global::System.Int64 _ProductType_id;
        partial void OnProductType_idChanging(global::System.Int64 value);
        partial void OnProductType_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Organization
        {
            get
            {
                return _Organization;
            }
            set
            {
                OnOrganizationChanging(value);
                ReportPropertyChanging("Organization");
                _Organization = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Organization");
                OnOrganizationChanged();
            }
        }
        private global::System.String _Organization;
        partial void OnOrganizationChanging(global::System.String value);
        partial void OnOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstallDir
        {
            get
            {
                return _InstallDir;
            }
            set
            {
                OnInstallDirChanging(value);
                ReportPropertyChanging("InstallDir");
                _InstallDir = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstallDir");
                OnInstallDirChanged();
            }
        }
        private global::System.String _InstallDir;
        partial void OnInstallDirChanging(global::System.String value);
        partial void OnInstallDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstallLevel
        {
            get
            {
                return _InstallLevel;
            }
            set
            {
                OnInstallLevelChanging(value);
                ReportPropertyChanging("InstallLevel");
                _InstallLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstallLevel");
                OnInstallLevelChanged();
            }
        }
        private global::System.Int32 _InstallLevel;
        partial void OnInstallLevelChanging(global::System.Int32 value);
        partial void OnInstallLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductKey
        {
            get
            {
                return _ProductKey;
            }
            set
            {
                OnProductKeyChanging(value);
                ReportPropertyChanging("ProductKey");
                _ProductKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductKey");
                OnProductKeyChanged();
            }
        }
        private global::System.String _ProductKey;
        partial void OnProductKeyChanging(global::System.String value);
        partial void OnProductKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Project
        {
            get
            {
                return _Project;
            }
            set
            {
                OnProjectChanging(value);
                ReportPropertyChanging("Project");
                _Project = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Project");
                OnProjectChanged();
            }
        }
        private global::System.String _Project;
        partial void OnProjectChanging(global::System.String value);
        partial void OnProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialPrefix
        {
            get
            {
                return _SerialPrefix;
            }
            set
            {
                OnSerialPrefixChanging(value);
                ReportPropertyChanging("SerialPrefix");
                _SerialPrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialPrefix");
                OnSerialPrefixChanged();
            }
        }
        private global::System.String _SerialPrefix;
        partial void OnSerialPrefixChanging(global::System.String value);
        partial void OnSerialPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> UseNetworkLicense
        {
            get
            {
                return _UseNetworkLicense;
            }
            set
            {
                OnUseNetworkLicenseChanging(value);
                ReportPropertyChanging("UseNetworkLicense");
                _UseNetworkLicense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseNetworkLicense");
                OnUseNetworkLicenseChanged();
            }
        }
        private Nullable<global::System.Boolean> _UseNetworkLicense;
        partial void OnUseNetworkLicenseChanging(Nullable<global::System.Boolean> value);
        partial void OnUseNetworkLicenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_inventorinstalloptions_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_inventorinstalloptions_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_inventorinstalloptions_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_inventorinstalloptions_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_inventorinstalloptions_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_inventorinstalloptions_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_inventorinstalloptions_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_inventorinstalloptions_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_inventorinstalloptions_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_inventorinstalloptions_producttype", "producttypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_option", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_option", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_option", "jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new job object.
        /// </summary>
        /// <param name="job_id">Initial value of the job_id property.</param>
        /// <param name="template_id">Initial value of the template_id property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="jobtype_id">Initial value of the jobtype_id property.</param>
        /// <param name="jobstatus_id">Initial value of the jobstatus_id property.</param>
        /// <param name="redo">Initial value of the redo property.</param>
        /// <param name="buildname">Initial value of the buildname property.</param>
        /// <param name="accepted">Initial value of the accepted property.</param>
        /// <param name="start_time">Initial value of the start_time property.</param>
        /// <param name="end_time">Initial value of the end_time property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        public static job Createjob(global::System.Decimal job_id, global::System.Int64 template_id, global::System.Int32 geosite_id, global::System.Int32 jobtype_id, global::System.Int64 jobstatus_id, global::System.Boolean redo, global::System.String buildname, global::System.Boolean accepted, global::System.DateTimeOffset start_time, global::System.DateTimeOffset end_time, global::System.Int64 branch_id)
        {
            job job = new job();
            job.job_id = job_id;
            job.template_id = template_id;
            job.geosite_id = geosite_id;
            job.jobtype_id = jobtype_id;
            job.jobstatus_id = jobstatus_id;
            job.redo = redo;
            job.buildname = buildname;
            job.accepted = accepted;
            job.start_time = start_time;
            job.end_time = end_time;
            job.branch_id = branch_id;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal job_id
        {
            get
            {
                return _job_id;
            }
            set
            {
                if (_job_id != value)
                {
                    Onjob_idChanging(value);
                    ReportPropertyChanging("job_id");
                    _job_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("job_id");
                    Onjob_idChanged();
                }
            }
        }
        private global::System.Decimal _job_id;
        partial void Onjob_idChanging(global::System.Decimal value);
        partial void Onjob_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 template_id
        {
            get
            {
                return _template_id;
            }
            set
            {
                Ontemplate_idChanging(value);
                ReportPropertyChanging("template_id");
                _template_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("template_id");
                Ontemplate_idChanged();
            }
        }
        private global::System.Int64 _template_id;
        partial void Ontemplate_idChanging(global::System.Int64 value);
        partial void Ontemplate_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 jobtype_id
        {
            get
            {
                return _jobtype_id;
            }
            set
            {
                Onjobtype_idChanging(value);
                ReportPropertyChanging("jobtype_id");
                _jobtype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("jobtype_id");
                Onjobtype_idChanged();
            }
        }
        private global::System.Int32 _jobtype_id;
        partial void Onjobtype_idChanging(global::System.Int32 value);
        partial void Onjobtype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 jobstatus_id
        {
            get
            {
                return _jobstatus_id;
            }
            set
            {
                Onjobstatus_idChanging(value);
                ReportPropertyChanging("jobstatus_id");
                _jobstatus_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("jobstatus_id");
                Onjobstatus_idChanged();
            }
        }
        private global::System.Int64 _jobstatus_id;
        partial void Onjobstatus_idChanging(global::System.Int64 value);
        partial void Onjobstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean redo
        {
            get
            {
                return _redo;
            }
            set
            {
                OnredoChanging(value);
                ReportPropertyChanging("redo");
                _redo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("redo");
                OnredoChanged();
            }
        }
        private global::System.Boolean _redo;
        partial void OnredoChanging(global::System.Boolean value);
        partial void OnredoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String buildname
        {
            get
            {
                return _buildname;
            }
            set
            {
                OnbuildnameChanging(value);
                ReportPropertyChanging("buildname");
                _buildname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("buildname");
                OnbuildnameChanged();
            }
        }
        private global::System.String _buildname;
        partial void OnbuildnameChanging(global::System.String value);
        partial void OnbuildnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean accepted
        {
            get
            {
                return _accepted;
            }
            set
            {
                OnacceptedChanging(value);
                ReportPropertyChanging("accepted");
                _accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accepted");
                OnacceptedChanged();
            }
        }
        private global::System.Boolean _accepted;
        partial void OnacceptedChanging(global::System.Boolean value);
        partial void OnacceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset start_time
        {
            get
            {
                return _start_time;
            }
            set
            {
                Onstart_timeChanging(value);
                ReportPropertyChanging("start_time");
                _start_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("start_time");
                Onstart_timeChanged();
            }
        }
        private global::System.DateTimeOffset _start_time;
        partial void Onstart_timeChanging(global::System.DateTimeOffset value);
        partial void Onstart_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset end_time
        {
            get
            {
                return _end_time;
            }
            set
            {
                Onend_timeChanging(value);
                ReportPropertyChanging("end_time");
                _end_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("end_time");
                Onend_timeChanged();
            }
        }
        private global::System.DateTimeOffset _end_time;
        partial void Onend_timeChanging(global::System.DateTimeOffset value);
        partial void Onend_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> current_status_id
        {
            get
            {
                return _current_status_id;
            }
            set
            {
                Oncurrent_status_idChanging(value);
                ReportPropertyChanging("current_status_id");
                _current_status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("current_status_id");
                Oncurrent_status_idChanged();
            }
        }
        private Nullable<global::System.Int64> _current_status_id;
        partial void Oncurrent_status_idChanging(Nullable<global::System.Int64> value);
        partial void Oncurrent_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> service_id
        {
            get
            {
                return _service_id;
            }
            set
            {
                Onservice_idChanging(value);
                ReportPropertyChanging("service_id");
                _service_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("service_id");
                Onservice_idChanged();
            }
        }
        private Nullable<global::System.Int64> _service_id;
        partial void Onservice_idChanging(Nullable<global::System.Int64> value);
        partial void Onservice_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> option_id
        {
            get
            {
                return _option_id;
            }
            set
            {
                Onoption_idChanging(value);
                ReportPropertyChanging("option_id");
                _option_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("option_id");
                Onoption_idChanged();
            }
        }
        private Nullable<global::System.Int64> _option_id;
        partial void Onoption_idChanging(Nullable<global::System.Int64> value);
        partial void Onoption_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String buildpath
        {
            get
            {
                return _buildpath;
            }
            set
            {
                OnbuildpathChanging(value);
                ReportPropertyChanging("buildpath");
                _buildpath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("buildpath");
                OnbuildpathChanged();
            }
        }
        private global::System.String _buildpath;
        partial void OnbuildpathChanging(global::System.String value);
        partial void OnbuildpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> image_id
        {
            get
            {
                return _image_id;
            }
            set
            {
                Onimage_idChanging(value);
                ReportPropertyChanging("image_id");
                _image_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("image_id");
                Onimage_idChanged();
            }
        }
        private Nullable<global::System.Decimal> _image_id;
        partial void Onimage_idChanging(Nullable<global::System.Decimal> value);
        partial void Onimage_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_jobs_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_jobs_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_jobs_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_jobs_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_jobs_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_jobs_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_jobs_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_jobs_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_job", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_job", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_job", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_image", "imageshistory")]
        public imageshistory imageshistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_jobs_image", "imageshistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_jobs_image", "imageshistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<imageshistory> imageshistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imageshistory>("veedatatest5Model.FK_jobs_image", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<imageshistory>("veedatatest5Model.FK_jobs_image", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_option", "inventorinstalloptions")]
        public inventorinstalloption inventorinstalloption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventorinstalloption>("veedatatest5Model.FK_jobs_option", "inventorinstalloptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventorinstalloption>("veedatatest5Model.FK_jobs_option", "inventorinstalloptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<inventorinstalloption> inventorinstalloptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<inventorinstalloption>("veedatatest5Model.FK_jobs_option", "inventorinstalloptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<inventorinstalloption>("veedatatest5Model.FK_jobs_option", "inventorinstalloptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_curstatus", "statusmessages")]
        public statusmessage statusmessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_jobs_curstatus", "statusmessages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_jobs_curstatus", "statusmessages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statusmessage> statusmessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statusmessage>("veedatatest5Model.FK_jobs_curstatus", "statusmessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statusmessage>("veedatatest5Model.FK_jobs_curstatus", "statusmessages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_service", "veeservices")]
        public veeservice veeservice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<veeservice>("veedatatest5Model.FK_jobs_service", "veeservices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<veeservice>("veedatatest5Model.FK_jobs_service", "veeservices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<veeservice> veeserviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<veeservice>("veedatatest5Model.FK_jobs_service", "veeservices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<veeservice>("veedatatest5Model.FK_jobs_service", "veeservices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_status", "statustype")]
        public statustype statustype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_jobs_status", "statustype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_jobs_status", "statustype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statustype> statustypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_jobs_status", "statustype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statustype>("veedatatest5Model.FK_jobs_status", "statustype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_template", "vmtemplates")]
        public vmtemplate vmtemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_jobs_template", "vmtemplates").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_jobs_template", "vmtemplates").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<vmtemplate> vmtemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<vmtemplate>("veedatatest5Model.FK_jobs_template", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<vmtemplate>("veedatatest5Model.FK_jobs_template", "vmtemplates", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_type", "jobtypes")]
        public jobtype jobtype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<jobtype>("veedatatest5Model.FK_jobs_type", "jobtypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<jobtype>("veedatatest5Model.FK_jobs_type", "jobtypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<jobtype> jobtypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<jobtype>("veedatatest5Model.FK_jobs_type", "jobtypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<jobtype>("veedatatest5Model.FK_jobs_type", "jobtypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="jobtype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class jobtype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new jobtype object.
        /// </summary>
        /// <param name="jobtype_id">Initial value of the jobtype_id property.</param>
        /// <param name="typestr">Initial value of the typestr property.</param>
        public static jobtype Createjobtype(global::System.Int32 jobtype_id, global::System.String typestr)
        {
            jobtype jobtype = new jobtype();
            jobtype.jobtype_id = jobtype_id;
            jobtype.typestr = typestr;
            return jobtype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 jobtype_id
        {
            get
            {
                return _jobtype_id;
            }
            set
            {
                if (_jobtype_id != value)
                {
                    Onjobtype_idChanging(value);
                    ReportPropertyChanging("jobtype_id");
                    _jobtype_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("jobtype_id");
                    Onjobtype_idChanged();
                }
            }
        }
        private global::System.Int32 _jobtype_id;
        partial void Onjobtype_idChanging(global::System.Int32 value);
        partial void Onjobtype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String typestr
        {
            get
            {
                return _typestr;
            }
            set
            {
                OntypestrChanging(value);
                ReportPropertyChanging("typestr");
                _typestr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("typestr");
                OntypestrChanged();
            }
        }
        private global::System.String _typestr;
        partial void OntypestrChanging(global::System.String value);
        partial void OntypestrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_type", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_type", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_type", "jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new language object.
        /// </summary>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="short_name">Initial value of the short_name property.</param>
        public static language Createlanguage(global::System.Int64 language_id, global::System.String short_name)
        {
            language language = new language();
            language.language_id = language_id;
            language.short_name = short_name;
            return language;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                if (_language_id != value)
                {
                    Onlanguage_idChanging(value);
                    ReportPropertyChanging("language_id");
                    _language_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("language_id");
                    Onlanguage_idChanged();
                }
            }
        }
        private global::System.Int64 _language_id;
        partial void Onlanguage_idChanging(global::System.Int64 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String short_name
        {
            get
            {
                return _short_name;
            }
            set
            {
                Onshort_nameChanging(value);
                ReportPropertyChanging("short_name");
                _short_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("short_name");
                Onshort_nameChanged();
            }
        }
        private global::System.String _short_name;
        partial void Onshort_nameChanging(global::System.String value);
        partial void Onshort_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String long_name
        {
            get
            {
                return _long_name;
            }
            set
            {
                Onlong_nameChanging(value);
                ReportPropertyChanging("long_name");
                _long_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("long_name");
                Onlong_nameChanged();
            }
        }
        private global::System.String _long_name;
        partial void Onlong_nameChanging(global::System.String value);
        partial void Onlong_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platforms_lang", "platforms")]
        public EntityCollection<platform> platforms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<platform>("veedatatest5Model.FK_platforms_lang", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<platform>("veedatatest5Model.FK_platforms_lang", "platforms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="monitorsetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class monitorsetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new monitorsetting object.
        /// </summary>
        /// <param name="setting_id">Initial value of the setting_id property.</param>
        /// <param name="watchinterval">Initial value of the watchinterval property.</param>
        /// <param name="checkinterval">Initial value of the checkinterval property.</param>
        /// <param name="cleanlegacylogfiles">Initial value of the cleanlegacylogfiles property.</param>
        /// <param name="createtime">Initial value of the createtime property.</param>
        /// <param name="modtimie">Initial value of the modtimie property.</param>
        /// <param name="notificationDirScanInterval">Initial value of the NotificationDirScanInterval property.</param>
        public static monitorsetting Createmonitorsetting(global::System.Int64 setting_id, global::System.String watchinterval, global::System.String checkinterval, global::System.String cleanlegacylogfiles, global::System.DateTime createtime, global::System.DateTime modtimie, global::System.String notificationDirScanInterval)
        {
            monitorsetting monitorsetting = new monitorsetting();
            monitorsetting.setting_id = setting_id;
            monitorsetting.watchinterval = watchinterval;
            monitorsetting.checkinterval = checkinterval;
            monitorsetting.cleanlegacylogfiles = cleanlegacylogfiles;
            monitorsetting.createtime = createtime;
            monitorsetting.modtimie = modtimie;
            monitorsetting.NotificationDirScanInterval = notificationDirScanInterval;
            return monitorsetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 setting_id
        {
            get
            {
                return _setting_id;
            }
            set
            {
                if (_setting_id != value)
                {
                    Onsetting_idChanging(value);
                    ReportPropertyChanging("setting_id");
                    _setting_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("setting_id");
                    Onsetting_idChanged();
                }
            }
        }
        private global::System.Int64 _setting_id;
        partial void Onsetting_idChanging(global::System.Int64 value);
        partial void Onsetting_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String watchinterval
        {
            get
            {
                return _watchinterval;
            }
            set
            {
                OnwatchintervalChanging(value);
                ReportPropertyChanging("watchinterval");
                _watchinterval = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("watchinterval");
                OnwatchintervalChanged();
            }
        }
        private global::System.String _watchinterval;
        partial void OnwatchintervalChanging(global::System.String value);
        partial void OnwatchintervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String checkinterval
        {
            get
            {
                return _checkinterval;
            }
            set
            {
                OncheckintervalChanging(value);
                ReportPropertyChanging("checkinterval");
                _checkinterval = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("checkinterval");
                OncheckintervalChanged();
            }
        }
        private global::System.String _checkinterval;
        partial void OncheckintervalChanging(global::System.String value);
        partial void OncheckintervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cleanlegacylogfiles
        {
            get
            {
                return _cleanlegacylogfiles;
            }
            set
            {
                OncleanlegacylogfilesChanging(value);
                ReportPropertyChanging("cleanlegacylogfiles");
                _cleanlegacylogfiles = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cleanlegacylogfiles");
                OncleanlegacylogfilesChanged();
            }
        }
        private global::System.String _cleanlegacylogfiles;
        partial void OncleanlegacylogfilesChanging(global::System.String value);
        partial void OncleanlegacylogfilesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private global::System.DateTime _createtime;
        partial void OncreatetimeChanging(global::System.DateTime value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modtimie
        {
            get
            {
                return _modtimie;
            }
            set
            {
                OnmodtimieChanging(value);
                ReportPropertyChanging("modtimie");
                _modtimie = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtimie");
                OnmodtimieChanged();
            }
        }
        private global::System.DateTime _modtimie;
        partial void OnmodtimieChanging(global::System.DateTime value);
        partial void OnmodtimieChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotificationDirScanInterval
        {
            get
            {
                return _NotificationDirScanInterval;
            }
            set
            {
                OnNotificationDirScanIntervalChanging(value);
                ReportPropertyChanging("NotificationDirScanInterval");
                _NotificationDirScanInterval = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NotificationDirScanInterval");
                OnNotificationDirScanIntervalChanged();
            }
        }
        private global::System.String _NotificationDirScanInterval;
        partial void OnNotificationDirScanIntervalChanging(global::System.String value);
        partial void OnNotificationDirScanIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="namingpattern")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class namingpattern : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new namingpattern object.
        /// </summary>
        /// <param name="namepattern_id">Initial value of the namepattern_id property.</param>
        /// <param name="pattern">Initial value of the pattern property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static namingpattern Createnamingpattern(global::System.Int64 namepattern_id, global::System.String pattern, global::System.String name)
        {
            namingpattern namingpattern = new namingpattern();
            namingpattern.namepattern_id = namepattern_id;
            namingpattern.pattern = pattern;
            namingpattern.name = name;
            return namingpattern;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 namepattern_id
        {
            get
            {
                return _namepattern_id;
            }
            set
            {
                if (_namepattern_id != value)
                {
                    Onnamepattern_idChanging(value);
                    ReportPropertyChanging("namepattern_id");
                    _namepattern_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("namepattern_id");
                    Onnamepattern_idChanged();
                }
            }
        }
        private global::System.Int64 _namepattern_id;
        partial void Onnamepattern_idChanging(global::System.Int64 value);
        partial void Onnamepattern_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pattern
        {
            get
            {
                return _pattern;
            }
            set
            {
                OnpatternChanging(value);
                ReportPropertyChanging("pattern");
                _pattern = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pattern");
                OnpatternChanged();
            }
        }
        private global::System.String _pattern;
        partial void OnpatternChanging(global::System.String value);
        partial void OnpatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="notifyemailtarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class notifyemailtarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new notifyemailtarget object.
        /// </summary>
        /// <param name="target_id">Initial value of the target_id property.</param>
        /// <param name="mailto">Initial value of the mailto property.</param>
        /// <param name="subject">Initial value of the subject property.</param>
        /// <param name="body">Initial value of the body property.</param>
        /// <param name="createtime">Initial value of the createtime property.</param>
        /// <param name="modtime">Initial value of the modtime property.</param>
        /// <param name="mailfrom">Initial value of the mailfrom property.</param>
        /// <param name="emailhost">Initial value of the emailhost property.</param>
        /// <param name="errorsubject">Initial value of the errorsubject property.</param>
        /// <param name="errorbody">Initial value of the errorbody property.</param>
        /// <param name="errorto">Initial value of the errorto property.</param>
        public static notifyemailtarget Createnotifyemailtarget(global::System.Int64 target_id, global::System.String mailto, global::System.String subject, global::System.String body, global::System.DateTime createtime, global::System.DateTime modtime, global::System.String mailfrom, global::System.String emailhost, global::System.String errorsubject, global::System.String errorbody, global::System.String errorto)
        {
            notifyemailtarget notifyemailtarget = new notifyemailtarget();
            notifyemailtarget.target_id = target_id;
            notifyemailtarget.mailto = mailto;
            notifyemailtarget.subject = subject;
            notifyemailtarget.body = body;
            notifyemailtarget.createtime = createtime;
            notifyemailtarget.modtime = modtime;
            notifyemailtarget.mailfrom = mailfrom;
            notifyemailtarget.emailhost = emailhost;
            notifyemailtarget.errorsubject = errorsubject;
            notifyemailtarget.errorbody = errorbody;
            notifyemailtarget.errorto = errorto;
            return notifyemailtarget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 target_id
        {
            get
            {
                return _target_id;
            }
            set
            {
                if (_target_id != value)
                {
                    Ontarget_idChanging(value);
                    ReportPropertyChanging("target_id");
                    _target_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("target_id");
                    Ontarget_idChanged();
                }
            }
        }
        private global::System.Int64 _target_id;
        partial void Ontarget_idChanging(global::System.Int64 value);
        partial void Ontarget_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mailto
        {
            get
            {
                return _mailto;
            }
            set
            {
                OnmailtoChanging(value);
                ReportPropertyChanging("mailto");
                _mailto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("mailto");
                OnmailtoChanged();
            }
        }
        private global::System.String _mailto;
        partial void OnmailtoChanging(global::System.String value);
        partial void OnmailtoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String subject
        {
            get
            {
                return _subject;
            }
            set
            {
                OnsubjectChanging(value);
                ReportPropertyChanging("subject");
                _subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("subject");
                OnsubjectChanged();
            }
        }
        private global::System.String _subject;
        partial void OnsubjectChanging(global::System.String value);
        partial void OnsubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String body
        {
            get
            {
                return _body;
            }
            set
            {
                OnbodyChanging(value);
                ReportPropertyChanging("body");
                _body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("body");
                OnbodyChanged();
            }
        }
        private global::System.String _body;
        partial void OnbodyChanging(global::System.String value);
        partial void OnbodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private global::System.DateTime _createtime;
        partial void OncreatetimeChanging(global::System.DateTime value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modtime
        {
            get
            {
                return _modtime;
            }
            set
            {
                OnmodtimeChanging(value);
                ReportPropertyChanging("modtime");
                _modtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtime");
                OnmodtimeChanged();
            }
        }
        private global::System.DateTime _modtime;
        partial void OnmodtimeChanging(global::System.DateTime value);
        partial void OnmodtimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mailfrom
        {
            get
            {
                return _mailfrom;
            }
            set
            {
                OnmailfromChanging(value);
                ReportPropertyChanging("mailfrom");
                _mailfrom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("mailfrom");
                OnmailfromChanged();
            }
        }
        private global::System.String _mailfrom;
        partial void OnmailfromChanging(global::System.String value);
        partial void OnmailfromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String emailhost
        {
            get
            {
                return _emailhost;
            }
            set
            {
                OnemailhostChanging(value);
                ReportPropertyChanging("emailhost");
                _emailhost = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("emailhost");
                OnemailhostChanged();
            }
        }
        private global::System.String _emailhost;
        partial void OnemailhostChanging(global::System.String value);
        partial void OnemailhostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String errorsubject
        {
            get
            {
                return _errorsubject;
            }
            set
            {
                OnerrorsubjectChanging(value);
                ReportPropertyChanging("errorsubject");
                _errorsubject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("errorsubject");
                OnerrorsubjectChanged();
            }
        }
        private global::System.String _errorsubject;
        partial void OnerrorsubjectChanging(global::System.String value);
        partial void OnerrorsubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String errorbody
        {
            get
            {
                return _errorbody;
            }
            set
            {
                OnerrorbodyChanging(value);
                ReportPropertyChanging("errorbody");
                _errorbody = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("errorbody");
                OnerrorbodyChanged();
            }
        }
        private global::System.String _errorbody;
        partial void OnerrorbodyChanging(global::System.String value);
        partial void OnerrorbodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String errorto
        {
            get
            {
                return _errorto;
            }
            set
            {
                OnerrortoChanging(value);
                ReportPropertyChanging("errorto");
                _errorto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("errorto");
                OnerrortoChanged();
            }
        }
        private global::System.String _errorto;
        partial void OnerrortoChanging(global::System.String value);
        partial void OnerrortoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_geosites_notify", "geosites")]
        public EntityCollection<geosite> geosites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<geosite>("veedatatest5Model.FK_geosites_notify", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<geosite>("veedatatest5Model.FK_geosites_notify", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_notify", "veeservices")]
        public EntityCollection<veeservice> veeservices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_notify", "veeservices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_notify", "veeservices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="platform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class platform : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new platform object.
        /// </summary>
        /// <param name="platform_id">Initial value of the platform_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="arch">Initial value of the arch property.</param>
        /// <param name="language_id">Initial value of the language_id property.</param>
        /// <param name="iTCPlatformID">Initial value of the ITCPlatformID property.</param>
        public static platform Createplatform(global::System.Int64 platform_id, global::System.String name, global::System.String arch, global::System.Int64 language_id, global::System.String iTCPlatformID)
        {
            platform platform = new platform();
            platform.platform_id = platform_id;
            platform.name = name;
            platform.arch = arch;
            platform.language_id = language_id;
            platform.ITCPlatformID = iTCPlatformID;
            return platform;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                if (_platform_id != value)
                {
                    Onplatform_idChanging(value);
                    ReportPropertyChanging("platform_id");
                    _platform_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("platform_id");
                    Onplatform_idChanged();
                }
            }
        }
        private global::System.Int64 _platform_id;
        partial void Onplatform_idChanging(global::System.Int64 value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String arch
        {
            get
            {
                return _arch;
            }
            set
            {
                OnarchChanging(value);
                ReportPropertyChanging("arch");
                _arch = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("arch");
                OnarchChanged();
            }
        }
        private global::System.String _arch;
        partial void OnarchChanging(global::System.String value);
        partial void OnarchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sp
        {
            get
            {
                return _sp;
            }
            set
            {
                OnspChanging(value);
                ReportPropertyChanging("sp");
                _sp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sp");
                OnspChanged();
            }
        }
        private global::System.String _sp;
        partial void OnspChanging(global::System.String value);
        partial void OnspChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String flavor
        {
            get
            {
                return _flavor;
            }
            set
            {
                OnflavorChanging(value);
                ReportPropertyChanging("flavor");
                _flavor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("flavor");
                OnflavorChanged();
            }
        }
        private global::System.String _flavor;
        partial void OnflavorChanging(global::System.String value);
        partial void OnflavorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VNCPort
        {
            get
            {
                return _VNCPort;
            }
            set
            {
                OnVNCPortChanging(value);
                ReportPropertyChanging("VNCPort");
                _VNCPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VNCPort");
                OnVNCPortChanged();
            }
        }
        private Nullable<global::System.Int64> _VNCPort;
        partial void OnVNCPortChanging(Nullable<global::System.Int64> value);
        partial void OnVNCPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String shortname
        {
            get
            {
                return _shortname;
            }
            set
            {
                OnshortnameChanging(value);
                ReportPropertyChanging("shortname");
                _shortname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("shortname");
                OnshortnameChanged();
            }
        }
        private global::System.String _shortname;
        partial void OnshortnameChanging(global::System.String value);
        partial void OnshortnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 language_id
        {
            get
            {
                return _language_id;
            }
            set
            {
                Onlanguage_idChanging(value);
                ReportPropertyChanging("language_id");
                _language_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("language_id");
                Onlanguage_idChanged();
            }
        }
        private global::System.Int64 _language_id;
        partial void Onlanguage_idChanging(global::System.Int64 value);
        partial void Onlanguage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ITCPlatformID
        {
            get
            {
                return _ITCPlatformID;
            }
            set
            {
                OnITCPlatformIDChanging(value);
                ReportPropertyChanging("ITCPlatformID");
                _ITCPlatformID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ITCPlatformID");
                OnITCPlatformIDChanged();
            }
        }
        private global::System.String _ITCPlatformID;
        partial void OnITCPlatformIDChanging(global::System.String value);
        partial void OnITCPlatformIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_platform", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_platform", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_platform", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platforms_lang", "languages")]
        public language language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("veedatatest5Model.FK_platforms_lang", "languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("veedatatest5Model.FK_platforms_lang", "languages").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<language> languageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<language>("veedatatest5Model.FK_platforms_lang", "languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<language>("veedatatest5Model.FK_platforms_lang", "languages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platformgroups_platform", "platformgroups")]
        public EntityCollection<platformgroup> platformgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<platformgroup>("veedatatest5Model.FK_platformgroups_platform", "platformgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<platformgroup>("veedatatest5Model.FK_platformgroups_platform", "platformgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Platforms", "veecustomactions")]
        public EntityCollection<veecustomaction> veecustomactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Platforms", "veecustomactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Platforms", "veecustomactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_platform", "vimserverstorage")]
        public EntityCollection<vimserverstorage> vimserverstorages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_platform", "vimserverstorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_platform", "vimserverstorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_platform", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_platform", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_platform", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="platformgroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class platformgroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new platformgroup object.
        /// </summary>
        /// <param name="idPlatformGroups">Initial value of the idPlatformGroups property.</param>
        /// <param name="platform_id">Initial value of the platform_id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        public static platformgroup Createplatformgroup(global::System.Int64 idPlatformGroups, global::System.Int64 platform_id, global::System.Int64 group_id)
        {
            platformgroup platformgroup = new platformgroup();
            platformgroup.idPlatformGroups = idPlatformGroups;
            platformgroup.platform_id = platform_id;
            platformgroup.group_id = group_id;
            return platformgroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idPlatformGroups
        {
            get
            {
                return _idPlatformGroups;
            }
            set
            {
                if (_idPlatformGroups != value)
                {
                    OnidPlatformGroupsChanging(value);
                    ReportPropertyChanging("idPlatformGroups");
                    _idPlatformGroups = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPlatformGroups");
                    OnidPlatformGroupsChanged();
                }
            }
        }
        private global::System.Int64 _idPlatformGroups;
        partial void OnidPlatformGroupsChanging(global::System.Int64 value);
        partial void OnidPlatformGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                Onplatform_idChanging(value);
                ReportPropertyChanging("platform_id");
                _platform_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platform_id");
                Onplatform_idChanged();
            }
        }
        private global::System.Int64 _platform_id;
        partial void Onplatform_idChanging(global::System.Int64 value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int64 _group_id;
        partial void Ongroup_idChanging(global::System.Int64 value);
        partial void Ongroup_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platformgroups_group", "groupsinfo")]
        public groupsinfo groupsinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_platformgroups_group", "groupsinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_platformgroups_group", "groupsinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupsinfo> groupsinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_platformgroups_group", "groupsinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<groupsinfo>("veedatatest5Model.FK_platformgroups_group", "groupsinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_platformgroups_platform", "platforms")]
        public platform platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_platformgroups_platform", "platforms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_platformgroups_platform", "platforms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platform> platformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_platformgroups_platform", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platform>("veedatatest5Model.FK_platformgroups_platform", "platforms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="productbuild")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class productbuild : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new productbuild object.
        /// </summary>
        /// <param name="build_id">Initial value of the build_id property.</param>
        /// <param name="build_name">Initial value of the build_name property.</param>
        /// <param name="build_label">Initial value of the build_label property.</param>
        /// <param name="build_path">Initial value of the build_path property.</param>
        /// <param name="is_suite">Initial value of the is_suite property.</param>
        public static productbuild Createproductbuild(global::System.Int64 build_id, global::System.String build_name, global::System.String build_label, global::System.String build_path, global::System.Boolean is_suite)
        {
            productbuild productbuild = new productbuild();
            productbuild.build_id = build_id;
            productbuild.build_name = build_name;
            productbuild.build_label = build_label;
            productbuild.build_path = build_path;
            productbuild.is_suite = is_suite;
            return productbuild;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 build_id
        {
            get
            {
                return _build_id;
            }
            set
            {
                if (_build_id != value)
                {
                    Onbuild_idChanging(value);
                    ReportPropertyChanging("build_id");
                    _build_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("build_id");
                    Onbuild_idChanged();
                }
            }
        }
        private global::System.Int64 _build_id;
        partial void Onbuild_idChanging(global::System.Int64 value);
        partial void Onbuild_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String build_name
        {
            get
            {
                return _build_name;
            }
            set
            {
                Onbuild_nameChanging(value);
                ReportPropertyChanging("build_name");
                _build_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("build_name");
                Onbuild_nameChanged();
            }
        }
        private global::System.String _build_name;
        partial void Onbuild_nameChanging(global::System.String value);
        partial void Onbuild_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String build_label
        {
            get
            {
                return _build_label;
            }
            set
            {
                Onbuild_labelChanging(value);
                ReportPropertyChanging("build_label");
                _build_label = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("build_label");
                Onbuild_labelChanged();
            }
        }
        private global::System.String _build_label;
        partial void Onbuild_labelChanging(global::System.String value);
        partial void Onbuild_labelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String build_path
        {
            get
            {
                return _build_path;
            }
            set
            {
                Onbuild_pathChanging(value);
                ReportPropertyChanging("build_path");
                _build_path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("build_path");
                Onbuild_pathChanged();
            }
        }
        private global::System.String _build_path;
        partial void Onbuild_pathChanging(global::System.String value);
        partial void Onbuild_pathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int64> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int64> value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private Nullable<global::System.Int64> _producttype_id;
        partial void Onproducttype_idChanging(Nullable<global::System.Int64> value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private Nullable<global::System.Int32> _geosite_id;
        partial void Ongeosite_idChanging(Nullable<global::System.Int32> value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _createtime;
        partial void OncreatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_suite
        {
            get
            {
                return _is_suite;
            }
            set
            {
                Onis_suiteChanging(value);
                ReportPropertyChanging("is_suite");
                _is_suite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_suite");
                Onis_suiteChanged();
            }
        }
        private global::System.Boolean _is_suite;
        partial void Onis_suiteChanging(global::System.Boolean value);
        partial void Onis_suiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> modtime
        {
            get
            {
                return _modtime;
            }
            set
            {
                OnmodtimeChanging(value);
                ReportPropertyChanging("modtime");
                _modtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtime");
                OnmodtimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _modtime;
        partial void OnmodtimeChanging(Nullable<global::System.DateTime> value);
        partial void OnmodtimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productbuilds_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_productbuilds_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_productbuilds_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_productbuilds_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_productbuilds_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productbuilds_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_productbuilds_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_productbuilds_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_productbuilds_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_productbuilds_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_prodcutbuilds_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_prodcutbuilds_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_prodcutbuilds_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_prodcutbuilds_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_prodcutbuilds_producttype", "producttypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="productgroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class productgroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new productgroup object.
        /// </summary>
        /// <param name="idProductGroups">Initial value of the idProductGroups property.</param>
        /// <param name="producttype_id">Initial value of the producttype_id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        public static productgroup Createproductgroup(global::System.Int64 idProductGroups, global::System.Int64 producttype_id, global::System.Int64 group_id)
        {
            productgroup productgroup = new productgroup();
            productgroup.idProductGroups = idProductGroups;
            productgroup.producttype_id = producttype_id;
            productgroup.group_id = group_id;
            return productgroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idProductGroups
        {
            get
            {
                return _idProductGroups;
            }
            set
            {
                if (_idProductGroups != value)
                {
                    OnidProductGroupsChanging(value);
                    ReportPropertyChanging("idProductGroups");
                    _idProductGroups = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProductGroups");
                    OnidProductGroupsChanged();
                }
            }
        }
        private global::System.Int64 _idProductGroups;
        partial void OnidProductGroupsChanging(global::System.Int64 value);
        partial void OnidProductGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private global::System.Int64 _producttype_id;
        partial void Onproducttype_idChanging(global::System.Int64 value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int64 _group_id;
        partial void Ongroup_idChanging(global::System.Int64 value);
        partial void Ongroup_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productgroups_group", "groupsinfo")]
        public groupsinfo groupsinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_productgroups_group", "groupsinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_productgroups_group", "groupsinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupsinfo> groupsinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_productgroups_group", "groupsinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<groupsinfo>("veedatatest5Model.FK_productgroups_group", "groupsinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productgroups_product", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productgroups_product", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productgroups_product", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productgroups_product", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_productgroups_product", "producttypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="productpattern")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class productpattern : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new productpattern object.
        /// </summary>
        /// <param name="idProductPatterns">Initial value of the idProductPatterns property.</param>
        /// <param name="pattern">Initial value of the pattern property.</param>
        /// <param name="producttype_id">Initial value of the producttype_id property.</param>
        /// <param name="enable">Initial value of the enable property.</param>
        /// <param name="sequence">Initial value of the sequence property.</param>
        public static productpattern Createproductpattern(global::System.Int64 idProductPatterns, global::System.String pattern, global::System.Int64 producttype_id, global::System.Boolean enable, global::System.Int64 sequence)
        {
            productpattern productpattern = new productpattern();
            productpattern.idProductPatterns = idProductPatterns;
            productpattern.pattern = pattern;
            productpattern.producttype_id = producttype_id;
            productpattern.enable = enable;
            productpattern.sequence = sequence;
            return productpattern;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idProductPatterns
        {
            get
            {
                return _idProductPatterns;
            }
            set
            {
                if (_idProductPatterns != value)
                {
                    OnidProductPatternsChanging(value);
                    ReportPropertyChanging("idProductPatterns");
                    _idProductPatterns = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProductPatterns");
                    OnidProductPatternsChanged();
                }
            }
        }
        private global::System.Int64 _idProductPatterns;
        partial void OnidProductPatternsChanging(global::System.Int64 value);
        partial void OnidProductPatternsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String pattern
        {
            get
            {
                return _pattern;
            }
            set
            {
                OnpatternChanging(value);
                ReportPropertyChanging("pattern");
                _pattern = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pattern");
                OnpatternChanged();
            }
        }
        private global::System.String _pattern;
        partial void OnpatternChanging(global::System.String value);
        partial void OnpatternChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private global::System.Int64 _producttype_id;
        partial void Onproducttype_idChanging(global::System.Int64 value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enable
        {
            get
            {
                return _enable;
            }
            set
            {
                OnenableChanging(value);
                ReportPropertyChanging("enable");
                _enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enable");
                OnenableChanged();
            }
        }
        private global::System.Boolean _enable;
        partial void OnenableChanging(global::System.Boolean value);
        partial void OnenableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 sequence
        {
            get
            {
                return _sequence;
            }
            set
            {
                OnsequenceChanging(value);
                ReportPropertyChanging("sequence");
                _sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sequence");
                OnsequenceChanged();
            }
        }
        private global::System.Int64 _sequence;
        partial void OnsequenceChanging(global::System.Int64 value);
        partial void OnsequenceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productpatterns_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productpatterns_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productpatterns_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_productpatterns_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_productpatterns_producttype", "producttypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="producttype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class producttype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new producttype object.
        /// </summary>
        /// <param name="productType_id">Initial value of the ProductType_id property.</param>
        /// <param name="type_str">Initial value of the type_str property.</param>
        /// <param name="setup_folder">Initial value of the setup_folder property.</param>
        public static producttype Createproducttype(global::System.Int64 productType_id, global::System.String type_str, global::System.String setup_folder)
        {
            producttype producttype = new producttype();
            producttype.ProductType_id = productType_id;
            producttype.type_str = type_str;
            producttype.setup_folder = setup_folder;
            return producttype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProductType_id
        {
            get
            {
                return _ProductType_id;
            }
            set
            {
                if (_ProductType_id != value)
                {
                    OnProductType_idChanging(value);
                    ReportPropertyChanging("ProductType_id");
                    _ProductType_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductType_id");
                    OnProductType_idChanged();
                }
            }
        }
        private global::System.Int64 _ProductType_id;
        partial void OnProductType_idChanging(global::System.Int64 value);
        partial void OnProductType_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type_str
        {
            get
            {
                return _type_str;
            }
            set
            {
                Ontype_strChanging(value);
                ReportPropertyChanging("type_str");
                _type_str = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type_str");
                Ontype_strChanged();
            }
        }
        private global::System.String _type_str;
        partial void Ontype_strChanging(global::System.String value);
        partial void Ontype_strChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String setup_folder
        {
            get
            {
                return _setup_folder;
            }
            set
            {
                Onsetup_folderChanging(value);
                ReportPropertyChanging("setup_folder");
                _setup_folder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("setup_folder");
                Onsetup_folderChanged();
            }
        }
        private global::System.String _setup_folder;
        partial void Onsetup_folderChanging(global::System.String value);
        partial void Onsetup_folderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_producttype", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_producttype", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_producttype", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_inventorinstalloptions_producttype", "inventorinstalloptions")]
        public EntityCollection<inventorinstalloption> inventorinstalloptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<inventorinstalloption>("veedatatest5Model.FK_inventorinstalloptions_producttype", "inventorinstalloptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<inventorinstalloption>("veedatatest5Model.FK_inventorinstalloptions_producttype", "inventorinstalloptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_prodcutbuilds_producttype", "productbuilds")]
        public EntityCollection<productbuild> productbuilds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productbuild>("veedatatest5Model.FK_prodcutbuilds_producttype", "productbuilds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productbuild>("veedatatest5Model.FK_prodcutbuilds_producttype", "productbuilds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productgroups_product", "productgroups")]
        public EntityCollection<productgroup> productgroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productgroup>("veedatatest5Model.FK_productgroups_product", "productgroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productgroup>("veedatatest5Model.FK_productgroups_product", "productgroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_productpatterns_producttype", "productpatterns")]
        public EntityCollection<productpattern> productpatterns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<productpattern>("veedatatest5Model.FK_productpatterns_producttype", "productpatterns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<productpattern>("veedatatest5Model.FK_productpatterns_producttype", "productpatterns", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Producttypes", "veecustomactions")]
        public EntityCollection<veecustomaction> veecustomactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Producttypes", "veecustomactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Producttypes", "veecustomactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_producttype", "vimserverstorage")]
        public EntityCollection<vimserverstorage> vimserverstorages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_producttype", "vimserverstorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vimserverstorage>("veedatatest5Model.FK_vimserverstorage_producttype", "vimserverstorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_producttype", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_producttype", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_producttype", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="programtool")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class programtool : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new programtool object.
        /// </summary>
        /// <param name="tool_id">Initial value of the tool_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="version">Initial value of the version property.</param>
        public static programtool Createprogramtool(global::System.Int64 tool_id, global::System.String name, global::System.String version)
        {
            programtool programtool = new programtool();
            programtool.tool_id = tool_id;
            programtool.name = name;
            programtool.version = version;
            return programtool;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 tool_id
        {
            get
            {
                return _tool_id;
            }
            set
            {
                if (_tool_id != value)
                {
                    Ontool_idChanging(value);
                    ReportPropertyChanging("tool_id");
                    _tool_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tool_id");
                    Ontool_idChanged();
                }
            }
        }
        private global::System.Int64 _tool_id;
        partial void Ontool_idChanging(global::System.Int64 value);
        partial void Ontool_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private global::System.String _version;
        partial void OnversionChanging(global::System.String value);
        partial void OnversionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="publishtargetsinfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class publishtargetsinfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new publishtargetsinfo object.
        /// </summary>
        /// <param name="targetsite_id">Initial value of the targetsite_id property.</param>
        /// <param name="enabled">Initial value of the enabled property.</param>
        /// <param name="server_root">Initial value of the server_root property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="server_link">Initial value of the server_link property.</param>
        public static publishtargetsinfo Createpublishtargetsinfo(global::System.Int64 targetsite_id, global::System.String enabled, global::System.String server_root, global::System.Int32 geosite_id, global::System.String server_link)
        {
            publishtargetsinfo publishtargetsinfo = new publishtargetsinfo();
            publishtargetsinfo.targetsite_id = targetsite_id;
            publishtargetsinfo.enabled = enabled;
            publishtargetsinfo.server_root = server_root;
            publishtargetsinfo.geosite_id = geosite_id;
            publishtargetsinfo.server_link = server_link;
            return publishtargetsinfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 targetsite_id
        {
            get
            {
                return _targetsite_id;
            }
            set
            {
                if (_targetsite_id != value)
                {
                    Ontargetsite_idChanging(value);
                    ReportPropertyChanging("targetsite_id");
                    _targetsite_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("targetsite_id");
                    Ontargetsite_idChanged();
                }
            }
        }
        private global::System.Int64 _targetsite_id;
        partial void Ontargetsite_idChanging(global::System.Int64 value);
        partial void Ontargetsite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enabled
        {
            get
            {
                return _enabled;
            }
            set
            {
                OnenabledChanging(value);
                ReportPropertyChanging("enabled");
                _enabled = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enabled");
                OnenabledChanged();
            }
        }
        private global::System.String _enabled;
        partial void OnenabledChanging(global::System.String value);
        partial void OnenabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String server_root
        {
            get
            {
                return _server_root;
            }
            set
            {
                Onserver_rootChanging(value);
                ReportPropertyChanging("server_root");
                _server_root = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("server_root");
                Onserver_rootChanged();
            }
        }
        private global::System.String _server_root;
        partial void Onserver_rootChanging(global::System.String value);
        partial void Onserver_rootChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String endpoint
        {
            get
            {
                return _endpoint;
            }
            set
            {
                OnendpointChanging(value);
                ReportPropertyChanging("endpoint");
                _endpoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("endpoint");
                OnendpointChanged();
            }
        }
        private global::System.String _endpoint;
        partial void OnendpointChanging(global::System.String value);
        partial void OnendpointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String server_link
        {
            get
            {
                return _server_link;
            }
            set
            {
                Onserver_linkChanging(value);
                ReportPropertyChanging("server_link");
                _server_link = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("server_link");
                Onserver_linkChanged();
            }
        }
        private global::System.String _server_link;
        partial void Onserver_linkChanging(global::System.String value);
        partial void Onserver_linkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String endpointpc
        {
            get
            {
                return _endpointpc;
            }
            set
            {
                OnendpointpcChanging(value);
                ReportPropertyChanging("endpointpc");
                _endpointpc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("endpointpc");
                OnendpointpcChanged();
            }
        }
        private global::System.String _endpointpc;
        partial void OnendpointpcChanging(global::System.String value);
        partial void OnendpointpcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_publishtargetsinfo_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_publishtargetsinfo_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_publishtargetsinfo_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_publishtargetsinfo_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_publishtargetsinfo_geosite", "geosites", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="serveralia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class serveralia : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new serveralia object.
        /// </summary>
        /// <param name="server_id">Initial value of the server_id property.</param>
        /// <param name="alias">Initial value of the alias property.</param>
        /// <param name="fullname">Initial value of the fullname property.</param>
        /// <param name="createtime">Initial value of the createtime property.</param>
        /// <param name="modtime">Initial value of the modtime property.</param>
        public static serveralia Createserveralia(global::System.Int32 server_id, global::System.String alias, global::System.String fullname, global::System.DateTime createtime, global::System.DateTime modtime)
        {
            serveralia serveralia = new serveralia();
            serveralia.server_id = server_id;
            serveralia.alias = alias;
            serveralia.fullname = fullname;
            serveralia.createtime = createtime;
            serveralia.modtime = modtime;
            return serveralia;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 server_id
        {
            get
            {
                return _server_id;
            }
            set
            {
                if (_server_id != value)
                {
                    Onserver_idChanging(value);
                    ReportPropertyChanging("server_id");
                    _server_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("server_id");
                    Onserver_idChanged();
                }
            }
        }
        private global::System.Int32 _server_id;
        partial void Onserver_idChanging(global::System.Int32 value);
        partial void Onserver_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String alias
        {
            get
            {
                return _alias;
            }
            set
            {
                OnaliasChanging(value);
                ReportPropertyChanging("alias");
                _alias = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("alias");
                OnaliasChanged();
            }
        }
        private global::System.String _alias;
        partial void OnaliasChanging(global::System.String value);
        partial void OnaliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullname
        {
            get
            {
                return _fullname;
            }
            set
            {
                OnfullnameChanging(value);
                ReportPropertyChanging("fullname");
                _fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullname");
                OnfullnameChanged();
            }
        }
        private global::System.String _fullname;
        partial void OnfullnameChanging(global::System.String value);
        partial void OnfullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipv4
        {
            get
            {
                return _ipv4;
            }
            set
            {
                Onipv4Changing(value);
                ReportPropertyChanging("ipv4");
                _ipv4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipv4");
                Onipv4Changed();
            }
        }
        private global::System.String _ipv4;
        partial void Onipv4Changing(global::System.String value);
        partial void Onipv4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ipv6
        {
            get
            {
                return _ipv6;
            }
            set
            {
                Onipv6Changing(value);
                ReportPropertyChanging("ipv6");
                _ipv6 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ipv6");
                Onipv6Changed();
            }
        }
        private global::System.String _ipv6;
        partial void Onipv6Changing(global::System.String value);
        partial void Onipv6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime createtime
        {
            get
            {
                return _createtime;
            }
            set
            {
                OncreatetimeChanging(value);
                ReportPropertyChanging("createtime");
                _createtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createtime");
                OncreatetimeChanged();
            }
        }
        private global::System.DateTime _createtime;
        partial void OncreatetimeChanging(global::System.DateTime value);
        partial void OncreatetimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime modtime
        {
            get
            {
                return _modtime;
            }
            set
            {
                OnmodtimeChanging(value);
                ReportPropertyChanging("modtime");
                _modtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("modtime");
                OnmodtimeChanged();
            }
        }
        private global::System.DateTime _modtime;
        partial void OnmodtimeChanging(global::System.DateTime value);
        partial void OnmodtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="statusmessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class statusmessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new statusmessage object.
        /// </summary>
        /// <param name="statusmsg_id">Initial value of the statusmsg_id property.</param>
        /// <param name="message">Initial value of the message property.</param>
        /// <param name="messagekey">Initial value of the messagekey property.</param>
        public static statusmessage Createstatusmessage(global::System.Int64 statusmsg_id, global::System.String message, global::System.String messagekey)
        {
            statusmessage statusmessage = new statusmessage();
            statusmessage.statusmsg_id = statusmsg_id;
            statusmessage.message = message;
            statusmessage.messagekey = messagekey;
            return statusmessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statusmsg_id
        {
            get
            {
                return _statusmsg_id;
            }
            set
            {
                if (_statusmsg_id != value)
                {
                    Onstatusmsg_idChanging(value);
                    ReportPropertyChanging("statusmsg_id");
                    _statusmsg_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("statusmsg_id");
                    Onstatusmsg_idChanged();
                }
            }
        }
        private global::System.Int64 _statusmsg_id;
        partial void Onstatusmsg_idChanging(global::System.Int64 value);
        partial void Onstatusmsg_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String message
        {
            get
            {
                return _message;
            }
            set
            {
                OnmessageChanging(value);
                ReportPropertyChanging("message");
                _message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("message");
                OnmessageChanged();
            }
        }
        private global::System.String _message;
        partial void OnmessageChanging(global::System.String value);
        partial void OnmessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String messagekey
        {
            get
            {
                return _messagekey;
            }
            set
            {
                OnmessagekeyChanging(value);
                ReportPropertyChanging("messagekey");
                _messagekey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("messagekey");
                OnmessagekeyChanged();
            }
        }
        private global::System.String _messagekey;
        partial void OnmessagekeyChanging(global::System.String value);
        partial void OnmessagekeyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_statusmsg", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_statusmsg", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_statusmsg", "cipdata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_curstatus", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_curstatus", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_curstatus", "jobs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="statustype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class statustype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new statustype object.
        /// </summary>
        /// <param name="statustype_id">Initial value of the statustype_id property.</param>
        /// <param name="status_str">Initial value of the status_str property.</param>
        public static statustype Createstatustype(global::System.Int64 statustype_id, global::System.String status_str)
        {
            statustype statustype = new statustype();
            statustype.statustype_id = statustype_id;
            statustype.status_str = status_str;
            return statustype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 statustype_id
        {
            get
            {
                return _statustype_id;
            }
            set
            {
                if (_statustype_id != value)
                {
                    Onstatustype_idChanging(value);
                    ReportPropertyChanging("statustype_id");
                    _statustype_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("statustype_id");
                    Onstatustype_idChanged();
                }
            }
        }
        private global::System.Int64 _statustype_id;
        partial void Onstatustype_idChanging(global::System.Int64 value);
        partial void Onstatustype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status_str
        {
            get
            {
                return _status_str;
            }
            set
            {
                Onstatus_strChanging(value);
                ReportPropertyChanging("status_str");
                _status_str = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status_str");
                Onstatus_strChanged();
            }
        }
        private global::System.String _status_str;
        partial void Onstatus_strChanging(global::System.String value);
        partial void Onstatus_strChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_statustype", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_statustype", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_statustype", "cipdata", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_removestatus", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_removestatus", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_removestatus", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_status", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_status", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_status", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_status", "veeservices")]
        public EntityCollection<veeservice> veeservices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_status", "veeservices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veeservice>("veedatatest5Model.FK_VEESRV_status", "veeservices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="usagegroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usagegroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usagegroup object.
        /// </summary>
        /// <param name="idUsageGroups">Initial value of the idUsageGroups property.</param>
        /// <param name="usagetype_id">Initial value of the usagetype_id property.</param>
        /// <param name="group_id">Initial value of the group_id property.</param>
        public static usagegroup Createusagegroup(global::System.Int64 idUsageGroups, global::System.Int32 usagetype_id, global::System.Int64 group_id)
        {
            usagegroup usagegroup = new usagegroup();
            usagegroup.idUsageGroups = idUsageGroups;
            usagegroup.usagetype_id = usagetype_id;
            usagegroup.group_id = group_id;
            return usagegroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idUsageGroups
        {
            get
            {
                return _idUsageGroups;
            }
            set
            {
                if (_idUsageGroups != value)
                {
                    OnidUsageGroupsChanging(value);
                    ReportPropertyChanging("idUsageGroups");
                    _idUsageGroups = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUsageGroups");
                    OnidUsageGroupsChanged();
                }
            }
        }
        private global::System.Int64 _idUsageGroups;
        partial void OnidUsageGroupsChanging(global::System.Int64 value);
        partial void OnidUsageGroupsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usagetype_id
        {
            get
            {
                return _usagetype_id;
            }
            set
            {
                Onusagetype_idChanging(value);
                ReportPropertyChanging("usagetype_id");
                _usagetype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usagetype_id");
                Onusagetype_idChanged();
            }
        }
        private global::System.Int32 _usagetype_id;
        partial void Onusagetype_idChanging(global::System.Int32 value);
        partial void Onusagetype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 group_id
        {
            get
            {
                return _group_id;
            }
            set
            {
                Ongroup_idChanging(value);
                ReportPropertyChanging("group_id");
                _group_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("group_id");
                Ongroup_idChanged();
            }
        }
        private global::System.Int64 _group_id;
        partial void Ongroup_idChanging(global::System.Int64 value);
        partial void Ongroup_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_usagegroups_group", "groupsinfo")]
        public groupsinfo groupsinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_usagegroups_group", "groupsinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_usagegroups_group", "groupsinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupsinfo> groupsinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<groupsinfo>("veedatatest5Model.FK_usagegroups_group", "groupsinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<groupsinfo>("veedatatest5Model.FK_usagegroups_group", "groupsinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_usagegroups_usagetype", "usagetypes")]
        public usagetype usagetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_usagegroups_usagetype", "usagetypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_usagegroups_usagetype", "usagetypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usagetype> usagetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_usagegroups_usagetype", "usagetypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usagetype>("veedatatest5Model.FK_usagegroups_usagetype", "usagetypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="usagetype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usagetype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usagetype object.
        /// </summary>
        /// <param name="usage_id">Initial value of the usage_id property.</param>
        /// <param name="usagestr">Initial value of the usagestr property.</param>
        public static usagetype Createusagetype(global::System.Int32 usage_id, global::System.String usagestr)
        {
            usagetype usagetype = new usagetype();
            usagetype.usage_id = usage_id;
            usagetype.usagestr = usagestr;
            return usagetype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usage_id
        {
            get
            {
                return _usage_id;
            }
            set
            {
                if (_usage_id != value)
                {
                    Onusage_idChanging(value);
                    ReportPropertyChanging("usage_id");
                    _usage_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("usage_id");
                    Onusage_idChanged();
                }
            }
        }
        private global::System.Int32 _usage_id;
        partial void Onusage_idChanging(global::System.Int32 value);
        partial void Onusage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String usagestr
        {
            get
            {
                return _usagestr;
            }
            set
            {
                OnusagestrChanging(value);
                ReportPropertyChanging("usagestr");
                _usagestr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("usagestr");
                OnusagestrChanged();
            }
        }
        private global::System.String _usagestr;
        partial void OnusagestrChanging(global::System.String value);
        partial void OnusagestrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_usagegroups_usagetype", "usagegroups")]
        public EntityCollection<usagegroup> usagegroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usagegroup>("veedatatest5Model.FK_usagegroups_usagetype", "usagegroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usagegroup>("veedatatest5Model.FK_usagegroups_usagetype", "usagegroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Usagetypes", "veecustomactions")]
        public EntityCollection<veecustomaction> veecustomactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "veecustomactions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veecustomaction>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "veecustomactions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_veeservices_usage", "veeservices")]
        public EntityCollection<veeservice> veeservices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<veeservice>("veedatatest5Model.FK_veeservices_usage", "veeservices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<veeservice>("veedatatest5Model.FK_veeservices_usage", "veeservices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_usage", "vmtemplates")]
        public EntityCollection<vmtemplate> vmtemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_usage", "vmtemplates");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<vmtemplate>("veedatatest5Model.FK_vmtemplates_usage", "vmtemplates", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="user_id">Initial value of the user_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static user Createuser(global::System.Int64 user_id, global::System.String name)
        {
            user user = new user();
            user.user_id = user_id;
            user.name = name;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 user_id
        {
            get
            {
                return _user_id;
            }
            set
            {
                if (_user_id != value)
                {
                    Onuser_idChanging(value);
                    ReportPropertyChanging("user_id");
                    _user_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("user_id");
                    Onuser_idChanged();
                }
            }
        }
        private global::System.Int64 _user_id;
        partial void Onuser_idChanging(global::System.Int64 value);
        partial void Onuser_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_user", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_user", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_user", "cipdata", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="veecustomaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class veecustomaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new veecustomaction object.
        /// </summary>
        /// <param name="action_ID">Initial value of the Action_ID property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static veecustomaction Createveecustomaction(global::System.Int64 action_ID, global::System.Int32 id)
        {
            veecustomaction veecustomaction = new veecustomaction();
            veecustomaction.Action_ID = action_ID;
            veecustomaction.ID = id;
            return veecustomaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Action_ID
        {
            get
            {
                return _Action_ID;
            }
            set
            {
                OnAction_IDChanging(value);
                ReportPropertyChanging("Action_ID");
                _Action_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Action_ID");
                OnAction_IDChanged();
            }
        }
        private global::System.Int64 _Action_ID;
        partial void OnAction_IDChanging(global::System.Int64 value);
        partial void OnAction_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action_Description
        {
            get
            {
                return _Action_Description;
            }
            set
            {
                OnAction_DescriptionChanging(value);
                ReportPropertyChanging("Action_Description");
                _Action_Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action_Description");
                OnAction_DescriptionChanged();
            }
        }
        private global::System.String _Action_Description;
        partial void OnAction_DescriptionChanging(global::System.String value);
        partial void OnAction_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Action_sequence
        {
            get
            {
                return _Action_sequence;
            }
            set
            {
                OnAction_sequenceChanging(value);
                ReportPropertyChanging("Action_sequence");
                _Action_sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Action_sequence");
                OnAction_sequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Action_sequence;
        partial void OnAction_sequenceChanging(Nullable<global::System.Int32> value);
        partial void OnAction_sequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private Nullable<global::System.Int64> _producttype_id;
        partial void Onproducttype_idChanging(Nullable<global::System.Int64> value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int64> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int64> value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String perform_action
        {
            get
            {
                return _perform_action;
            }
            set
            {
                Onperform_actionChanging(value);
                ReportPropertyChanging("perform_action");
                _perform_action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("perform_action");
                Onperform_actionChanged();
            }
        }
        private global::System.String _perform_action;
        partial void Onperform_actionChanging(global::System.String value);
        partial void Onperform_actionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                Onplatform_idChanging(value);
                ReportPropertyChanging("platform_id");
                _platform_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platform_id");
                Onplatform_idChanged();
            }
        }
        private Nullable<global::System.Int64> _platform_id;
        partial void Onplatform_idChanging(Nullable<global::System.Int64> value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> usagetype_id
        {
            get
            {
                return _usagetype_id;
            }
            set
            {
                Onusagetype_idChanging(value);
                ReportPropertyChanging("usagetype_id");
                _usagetype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usagetype_id");
                Onusagetype_idChanged();
            }
        }
        private Nullable<global::System.Int32> _usagetype_id;
        partial void Onusagetype_idChanging(Nullable<global::System.Int32> value);
        partial void Onusagetype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> timeout
        {
            get
            {
                return _timeout;
            }
            set
            {
                OntimeoutChanging(value);
                ReportPropertyChanging("timeout");
                _timeout = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timeout");
                OntimeoutChanged();
            }
        }
        private Nullable<global::System.Int64> _timeout;
        partial void OntimeoutChanging(Nullable<global::System.Int64> value);
        partial void OntimeoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action_result
        {
            get
            {
                return _Action_result;
            }
            set
            {
                OnAction_resultChanging(value);
                ReportPropertyChanging("Action_result");
                _Action_result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action_result");
                OnAction_resultChanged();
            }
        }
        private global::System.String _Action_result;
        partial void OnAction_resultChanging(global::System.String value);
        partial void OnAction_resultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String continue_if_error
        {
            get
            {
                return _continue_if_error;
            }
            set
            {
                Oncontinue_if_errorChanging(value);
                ReportPropertyChanging("continue_if_error");
                _continue_if_error = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("continue_if_error");
                Oncontinue_if_errorChanged();
            }
        }
        private global::System.String _continue_if_error;
        partial void Oncontinue_if_errorChanging(global::System.String value);
        partial void Oncontinue_if_errorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Run_env
        {
            get
            {
                return _Run_env;
            }
            set
            {
                OnRun_envChanging(value);
                ReportPropertyChanging("Run_env");
                _Run_env = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Run_env");
                OnRun_envChanged();
            }
        }
        private global::System.String _Run_env;
        partial void OnRun_envChanging(global::System.String value);
        partial void OnRun_envChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> branchgroup_id
        {
            get
            {
                return _branchgroup_id;
            }
            set
            {
                Onbranchgroup_idChanging(value);
                ReportPropertyChanging("branchgroup_id");
                _branchgroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branchgroup_id");
                Onbranchgroup_idChanged();
            }
        }
        private Nullable<global::System.Int64> _branchgroup_id;
        partial void Onbranchgroup_idChanging(Nullable<global::System.Int64> value);
        partial void Onbranchgroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> productgroup_id
        {
            get
            {
                return _productgroup_id;
            }
            set
            {
                Onproductgroup_idChanging(value);
                ReportPropertyChanging("productgroup_id");
                _productgroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("productgroup_id");
                Onproductgroup_idChanged();
            }
        }
        private Nullable<global::System.Int64> _productgroup_id;
        partial void Onproductgroup_idChanging(Nullable<global::System.Int64> value);
        partial void Onproductgroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> platformgroup_id
        {
            get
            {
                return _platformgroup_id;
            }
            set
            {
                Onplatformgroup_idChanging(value);
                ReportPropertyChanging("platformgroup_id");
                _platformgroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platformgroup_id");
                Onplatformgroup_idChanged();
            }
        }
        private Nullable<global::System.Int64> _platformgroup_id;
        partial void Onplatformgroup_idChanging(Nullable<global::System.Int64> value);
        partial void Onplatformgroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> usagegroup_id
        {
            get
            {
                return _usagegroup_id;
            }
            set
            {
                Onusagegroup_idChanging(value);
                ReportPropertyChanging("usagegroup_id");
                _usagegroup_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usagegroup_id");
                Onusagegroup_idChanged();
            }
        }
        private Nullable<global::System.Int64> _usagegroup_id;
        partial void Onusagegroup_idChanging(Nullable<global::System.Int64> value);
        partial void Onusagegroup_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String enable
        {
            get
            {
                return _enable;
            }
            set
            {
                OnenableChanging(value);
                ReportPropertyChanging("enable");
                _enable = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("enable");
                OnenableChanged();
            }
        }
        private global::System.String _enable;
        partial void OnenableChanging(global::System.String value);
        partial void OnenableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Branches", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_VEECustomAction_Branches", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_VEECustomAction_Branches", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_VEECustomAction_Branches", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_VEECustomAction_Branches", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_CustomActionInfo", "customactioninfo")]
        public customactioninfo customactioninfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customactioninfo>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "customactioninfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customactioninfo>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "customactioninfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<customactioninfo> customactioninfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<customactioninfo>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "customactioninfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<customactioninfo>("veedatatest5Model.FK_VEECustomAction_CustomActionInfo", "customactioninfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Platforms", "platforms")]
        public platform platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_VEECustomAction_Platforms", "platforms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_VEECustomAction_Platforms", "platforms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platform> platformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_VEECustomAction_Platforms", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platform>("veedatatest5Model.FK_VEECustomAction_Platforms", "platforms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Producttypes", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_VEECustomAction_Producttypes", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_VEECustomAction_Producttypes", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_VEECustomAction_Producttypes", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_VEECustomAction_Producttypes", "producttypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEECustomAction_Usagetypes", "usagetypes")]
        public usagetype usagetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "usagetypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "usagetypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usagetype> usagetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "usagetypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usagetype>("veedatatest5Model.FK_VEECustomAction_Usagetypes", "usagetypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="veeservice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class veeservice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new veeservice object.
        /// </summary>
        /// <param name="service_id">Initial value of the service_id property.</param>
        /// <param name="machine_name">Initial value of the machine_name property.</param>
        /// <param name="machine_ip">Initial value of the machine_ip property.</param>
        /// <param name="site_name">Initial value of the site_name property.</param>
        /// <param name="status_id">Initial value of the status_id property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="lastActivePulseTime">Initial value of the LastActivePulseTime property.</param>
        public static veeservice Createveeservice(global::System.Int64 service_id, global::System.String machine_name, global::System.String machine_ip, global::System.String site_name, global::System.Int64 status_id, global::System.Int32 geosite_id, global::System.DateTimeOffset lastActivePulseTime)
        {
            veeservice veeservice = new veeservice();
            veeservice.service_id = service_id;
            veeservice.machine_name = machine_name;
            veeservice.machine_ip = machine_ip;
            veeservice.site_name = site_name;
            veeservice.status_id = status_id;
            veeservice.geosite_id = geosite_id;
            veeservice.LastActivePulseTime = lastActivePulseTime;
            return veeservice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 service_id
        {
            get
            {
                return _service_id;
            }
            set
            {
                if (_service_id != value)
                {
                    Onservice_idChanging(value);
                    ReportPropertyChanging("service_id");
                    _service_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("service_id");
                    Onservice_idChanged();
                }
            }
        }
        private global::System.Int64 _service_id;
        partial void Onservice_idChanging(global::System.Int64 value);
        partial void Onservice_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String machine_name
        {
            get
            {
                return _machine_name;
            }
            set
            {
                Onmachine_nameChanging(value);
                ReportPropertyChanging("machine_name");
                _machine_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("machine_name");
                Onmachine_nameChanged();
            }
        }
        private global::System.String _machine_name;
        partial void Onmachine_nameChanging(global::System.String value);
        partial void Onmachine_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String machine_ip
        {
            get
            {
                return _machine_ip;
            }
            set
            {
                Onmachine_ipChanging(value);
                ReportPropertyChanging("machine_ip");
                _machine_ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("machine_ip");
                Onmachine_ipChanged();
            }
        }
        private global::System.String _machine_ip;
        partial void Onmachine_ipChanging(global::System.String value);
        partial void Onmachine_ipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String site_name
        {
            get
            {
                return _site_name;
            }
            set
            {
                Onsite_nameChanging(value);
                ReportPropertyChanging("site_name");
                _site_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("site_name");
                Onsite_nameChanged();
            }
        }
        private global::System.String _site_name;
        partial void Onsite_nameChanging(global::System.String value);
        partial void Onsite_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private global::System.Int64 _status_id;
        partial void Onstatus_idChanging(global::System.Int64 value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> usage_id
        {
            get
            {
                return _usage_id;
            }
            set
            {
                Onusage_idChanging(value);
                ReportPropertyChanging("usage_id");
                _usage_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usage_id");
                Onusage_idChanged();
            }
        }
        private Nullable<global::System.Int32> _usage_id;
        partial void Onusage_idChanging(Nullable<global::System.Int32> value);
        partial void Onusage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset LastActivePulseTime
        {
            get
            {
                return _LastActivePulseTime;
            }
            set
            {
                OnLastActivePulseTimeChanging(value);
                ReportPropertyChanging("LastActivePulseTime");
                _LastActivePulseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivePulseTime");
                OnLastActivePulseTimeChanged();
            }
        }
        private global::System.DateTimeOffset _LastActivePulseTime;
        partial void OnLastActivePulseTimeChanging(global::System.DateTimeOffset value);
        partial void OnLastActivePulseTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> notifyinfo_id
        {
            get
            {
                return _notifyinfo_id;
            }
            set
            {
                Onnotifyinfo_idChanging(value);
                ReportPropertyChanging("notifyinfo_id");
                _notifyinfo_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("notifyinfo_id");
                Onnotifyinfo_idChanged();
            }
        }
        private Nullable<global::System.Int64> _notifyinfo_id;
        partial void Onnotifyinfo_idChanging(Nullable<global::System.Int64> value);
        partial void Onnotifyinfo_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_VEESRV_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_VEESRV_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_VEESRV_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_VEESRV_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_service", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_service", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_service", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_notify", "notifyemailtargets")]
        public notifyemailtarget notifyemailtarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_VEESRV_notify", "notifyemailtargets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_VEESRV_notify", "notifyemailtargets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<notifyemailtarget> notifyemailtargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<notifyemailtarget>("veedatatest5Model.FK_VEESRV_notify", "notifyemailtargets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<notifyemailtarget>("veedatatest5Model.FK_VEESRV_notify", "notifyemailtargets", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_VEESRV_status", "statustype")]
        public statustype statustype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_VEESRV_status", "statustype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_VEESRV_status", "statustype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<statustype> statustypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<statustype>("veedatatest5Model.FK_VEESRV_status", "statustype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<statustype>("veedatatest5Model.FK_VEESRV_status", "statustype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_veeservices_usage", "usagetypes")]
        public usagetype usagetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_veeservices_usage", "usagetypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_veeservices_usage", "usagetypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usagetype> usagetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_veeservices_usage", "usagetypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usagetype>("veedatatest5Model.FK_veeservices_usage", "usagetypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="versionsid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class versionsid : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new versionsid object.
        /// </summary>
        /// <param name="version_id">Initial value of the version_id property.</param>
        /// <param name="display">Initial value of the display property.</param>
        public static versionsid Createversionsid(global::System.Int64 version_id, global::System.String display)
        {
            versionsid versionsid = new versionsid();
            versionsid.version_id = version_id;
            versionsid.display = display;
            return versionsid;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 version_id
        {
            get
            {
                return _version_id;
            }
            set
            {
                if (_version_id != value)
                {
                    Onversion_idChanging(value);
                    ReportPropertyChanging("version_id");
                    _version_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("version_id");
                    Onversion_idChanged();
                }
            }
        }
        private global::System.Int64 _version_id;
        partial void Onversion_idChanging(global::System.Int64 value);
        partial void Onversion_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String display
        {
            get
            {
                return _display;
            }
            set
            {
                OndisplayChanging(value);
                ReportPropertyChanging("display");
                _display = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("display");
                OndisplayChanged();
            }
        }
        private global::System.String _display;
        partial void OndisplayChanging(global::System.String value);
        partial void OndisplayChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_cipdata_version", "cipdata")]
        public EntityCollection<cipdata> cipdatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_version", "cipdata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<cipdata>("veedatatest5Model.FK_cipdata_version", "cipdata", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="vimserverstorage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vimserverstorage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vimserverstorage object.
        /// </summary>
        /// <param name="idVIMServerStorage">Initial value of the idVIMServerStorage property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="imagetype_id">Initial value of the imagetype_id property.</param>
        /// <param name="rootpath">Initial value of the rootpath property.</param>
        public static vimserverstorage Createvimserverstorage(global::System.Int64 idVIMServerStorage, global::System.Int32 geosite_id, global::System.Int64 imagetype_id, global::System.String rootpath)
        {
            vimserverstorage vimserverstorage = new vimserverstorage();
            vimserverstorage.idVIMServerStorage = idVIMServerStorage;
            vimserverstorage.geosite_id = geosite_id;
            vimserverstorage.imagetype_id = imagetype_id;
            vimserverstorage.rootpath = rootpath;
            return vimserverstorage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 idVIMServerStorage
        {
            get
            {
                return _idVIMServerStorage;
            }
            set
            {
                if (_idVIMServerStorage != value)
                {
                    OnidVIMServerStorageChanging(value);
                    ReportPropertyChanging("idVIMServerStorage");
                    _idVIMServerStorage = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idVIMServerStorage");
                    OnidVIMServerStorageChanged();
                }
            }
        }
        private global::System.Int64 _idVIMServerStorage;
        partial void OnidVIMServerStorageChanging(global::System.Int64 value);
        partial void OnidVIMServerStorageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 imagetype_id
        {
            get
            {
                return _imagetype_id;
            }
            set
            {
                Onimagetype_idChanging(value);
                ReportPropertyChanging("imagetype_id");
                _imagetype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("imagetype_id");
                Onimagetype_idChanged();
            }
        }
        private global::System.Int64 _imagetype_id;
        partial void Onimagetype_idChanging(global::System.Int64 value);
        partial void Onimagetype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private Nullable<global::System.Int64> _branch_id;
        partial void Onbranch_idChanging(Nullable<global::System.Int64> value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                Onplatform_idChanging(value);
                ReportPropertyChanging("platform_id");
                _platform_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platform_id");
                Onplatform_idChanged();
            }
        }
        private Nullable<global::System.Int64> _platform_id;
        partial void Onplatform_idChanging(Nullable<global::System.Int64> value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private Nullable<global::System.Int64> _producttype_id;
        partial void Onproducttype_idChanging(Nullable<global::System.Int64> value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rootpath
        {
            get
            {
                return _rootpath;
            }
            set
            {
                OnrootpathChanging(value);
                ReportPropertyChanging("rootpath");
                _rootpath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rootpath");
                OnrootpathChanged();
            }
        }
        private global::System.String _rootpath;
        partial void OnrootpathChanging(global::System.String value);
        partial void OnrootpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String linkpath
        {
            get
            {
                return _linkpath;
            }
            set
            {
                OnlinkpathChanging(value);
                ReportPropertyChanging("linkpath");
                _linkpath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("linkpath");
                OnlinkpathChanged();
            }
        }
        private global::System.String _linkpath;
        partial void OnlinkpathChanging(global::System.String value);
        partial void OnlinkpathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vimserverstorage_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vimserverstorage_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vimserverstorage_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_vimserverstorage_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vimserverstorage_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vimserverstorage_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vimserverstorage_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_vimserverstorage_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_imagetype", "imagetypes")]
        public imagetype imagetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagetype>("veedatatest5Model.FK_vimserverstorage_imagetype", "imagetypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagetype>("veedatatest5Model.FK_vimserverstorage_imagetype", "imagetypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<imagetype> imagetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagetype>("veedatatest5Model.FK_vimserverstorage_imagetype", "imagetypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<imagetype>("veedatatest5Model.FK_vimserverstorage_imagetype", "imagetypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_platform", "platforms")]
        public platform platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vimserverstorage_platform", "platforms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vimserverstorage_platform", "platforms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platform> platformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vimserverstorage_platform", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platform>("veedatatest5Model.FK_vimserverstorage_platform", "platforms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vimserverstorage_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vimserverstorage_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vimserverstorage_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vimserverstorage_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_vimserverstorage_producttype", "producttypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="veedatatest5Model", Name="vmtemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vmtemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vmtemplate object.
        /// </summary>
        /// <param name="template_id">Initial value of the template_id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="platform_id">Initial value of the platform_id property.</param>
        /// <param name="fullpath">Initial value of the fullpath property.</param>
        /// <param name="geosite_id">Initial value of the geosite_id property.</param>
        /// <param name="enabled">Initial value of the enabled property.</param>
        /// <param name="publishto">Initial value of the publishto property.</param>
        /// <param name="basename">Initial value of the basename property.</param>
        /// <param name="guestuser">Initial value of the guestuser property.</param>
        /// <param name="guestpw">Initial value of the guestpw property.</param>
        /// <param name="content_id">Initial value of the content_id property.</param>
        /// <param name="usage_id">Initial value of the usage_id property.</param>
        /// <param name="branch_id">Initial value of the branch_id property.</param>
        /// <param name="producttype_id">Initial value of the producttype_id property.</param>
        /// <param name="setuppackagetype">Initial value of the setuppackagetype property.</param>
        public static vmtemplate Createvmtemplate(global::System.Int64 template_id, global::System.String name, global::System.Int64 platform_id, global::System.String fullpath, global::System.Int32 geosite_id, global::System.Boolean enabled, global::System.String publishto, global::System.String basename, global::System.String guestuser, global::System.String guestpw, global::System.Int64 content_id, global::System.Int32 usage_id, global::System.Int64 branch_id, global::System.Int64 producttype_id, global::System.String setuppackagetype)
        {
            vmtemplate vmtemplate = new vmtemplate();
            vmtemplate.template_id = template_id;
            vmtemplate.name = name;
            vmtemplate.platform_id = platform_id;
            vmtemplate.fullpath = fullpath;
            vmtemplate.geosite_id = geosite_id;
            vmtemplate.enabled = enabled;
            vmtemplate.publishto = publishto;
            vmtemplate.basename = basename;
            vmtemplate.guestuser = guestuser;
            vmtemplate.guestpw = guestpw;
            vmtemplate.content_id = content_id;
            vmtemplate.usage_id = usage_id;
            vmtemplate.branch_id = branch_id;
            vmtemplate.producttype_id = producttype_id;
            vmtemplate.setuppackagetype = setuppackagetype;
            return vmtemplate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 template_id
        {
            get
            {
                return _template_id;
            }
            set
            {
                if (_template_id != value)
                {
                    Ontemplate_idChanging(value);
                    ReportPropertyChanging("template_id");
                    _template_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("template_id");
                    Ontemplate_idChanged();
                }
            }
        }
        private global::System.Int64 _template_id;
        partial void Ontemplate_idChanging(global::System.Int64 value);
        partial void Ontemplate_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 platform_id
        {
            get
            {
                return _platform_id;
            }
            set
            {
                Onplatform_idChanging(value);
                ReportPropertyChanging("platform_id");
                _platform_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("platform_id");
                Onplatform_idChanged();
            }
        }
        private global::System.Int64 _platform_id;
        partial void Onplatform_idChanging(global::System.Int64 value);
        partial void Onplatform_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullpath
        {
            get
            {
                return _fullpath;
            }
            set
            {
                OnfullpathChanging(value);
                ReportPropertyChanging("fullpath");
                _fullpath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullpath");
                OnfullpathChanged();
            }
        }
        private global::System.String _fullpath;
        partial void OnfullpathChanging(global::System.String value);
        partial void OnfullpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 geosite_id
        {
            get
            {
                return _geosite_id;
            }
            set
            {
                Ongeosite_idChanging(value);
                ReportPropertyChanging("geosite_id");
                _geosite_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("geosite_id");
                Ongeosite_idChanged();
            }
        }
        private global::System.Int32 _geosite_id;
        partial void Ongeosite_idChanging(global::System.Int32 value);
        partial void Ongeosite_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean enabled
        {
            get
            {
                return _enabled;
            }
            set
            {
                OnenabledChanging(value);
                ReportPropertyChanging("enabled");
                _enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enabled");
                OnenabledChanged();
            }
        }
        private global::System.Boolean _enabled;
        partial void OnenabledChanging(global::System.Boolean value);
        partial void OnenabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String publishto
        {
            get
            {
                return _publishto;
            }
            set
            {
                OnpublishtoChanging(value);
                ReportPropertyChanging("publishto");
                _publishto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("publishto");
                OnpublishtoChanged();
            }
        }
        private global::System.String _publishto;
        partial void OnpublishtoChanging(global::System.String value);
        partial void OnpublishtoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String basename
        {
            get
            {
                return _basename;
            }
            set
            {
                OnbasenameChanging(value);
                ReportPropertyChanging("basename");
                _basename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("basename");
                OnbasenameChanged();
            }
        }
        private global::System.String _basename;
        partial void OnbasenameChanging(global::System.String value);
        partial void OnbasenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String guestuser
        {
            get
            {
                return _guestuser;
            }
            set
            {
                OnguestuserChanging(value);
                ReportPropertyChanging("guestuser");
                _guestuser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("guestuser");
                OnguestuserChanged();
            }
        }
        private global::System.String _guestuser;
        partial void OnguestuserChanging(global::System.String value);
        partial void OnguestuserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String guestpw
        {
            get
            {
                return _guestpw;
            }
            set
            {
                OnguestpwChanging(value);
                ReportPropertyChanging("guestpw");
                _guestpw = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("guestpw");
                OnguestpwChanged();
            }
        }
        private global::System.String _guestpw;
        partial void OnguestpwChanging(global::System.String value);
        partial void OnguestpwChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 content_id
        {
            get
            {
                return _content_id;
            }
            set
            {
                Oncontent_idChanging(value);
                ReportPropertyChanging("content_id");
                _content_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("content_id");
                Oncontent_idChanged();
            }
        }
        private global::System.Int64 _content_id;
        partial void Oncontent_idChanging(global::System.Int64 value);
        partial void Oncontent_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 usage_id
        {
            get
            {
                return _usage_id;
            }
            set
            {
                Onusage_idChanging(value);
                ReportPropertyChanging("usage_id");
                _usage_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("usage_id");
                Onusage_idChanged();
            }
        }
        private global::System.Int32 _usage_id;
        partial void Onusage_idChanging(global::System.Int32 value);
        partial void Onusage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String memo
        {
            get
            {
                return _memo;
            }
            set
            {
                OnmemoChanging(value);
                ReportPropertyChanging("memo");
                _memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("memo");
                OnmemoChanged();
            }
        }
        private global::System.String _memo;
        partial void OnmemoChanging(global::System.String value);
        partial void OnmemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 branch_id
        {
            get
            {
                return _branch_id;
            }
            set
            {
                Onbranch_idChanging(value);
                ReportPropertyChanging("branch_id");
                _branch_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("branch_id");
                Onbranch_idChanged();
            }
        }
        private global::System.Int64 _branch_id;
        partial void Onbranch_idChanging(global::System.Int64 value);
        partial void Onbranch_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 producttype_id
        {
            get
            {
                return _producttype_id;
            }
            set
            {
                Onproducttype_idChanging(value);
                ReportPropertyChanging("producttype_id");
                _producttype_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("producttype_id");
                Onproducttype_idChanged();
            }
        }
        private global::System.Int64 _producttype_id;
        partial void Onproducttype_idChanging(global::System.Int64 value);
        partial void Onproducttype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String setuppackagetype
        {
            get
            {
                return _setuppackagetype;
            }
            set
            {
                OnsetuppackagetypeChanging(value);
                ReportPropertyChanging("setuppackagetype");
                _setuppackagetype = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("setuppackagetype");
                OnsetuppackagetypeChanged();
            }
        }
        private global::System.String _setuppackagetype;
        partial void OnsetuppackagetypeChanging(global::System.String value);
        partial void OnsetuppackagetypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_branch", "branchinfo")]
        public branchinfo branchinfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vmtemplates_branch", "branchinfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vmtemplates_branch", "branchinfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<branchinfo> branchinfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<branchinfo>("veedatatest5Model.FK_vmtemplates_branch", "branchinfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<branchinfo>("veedatatest5Model.FK_vmtemplates_branch", "branchinfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_geosite", "geosites")]
        public geosite geosite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vmtemplates_geosite", "geosites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vmtemplates_geosite", "geosites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<geosite> geositeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<geosite>("veedatatest5Model.FK_vmtemplates_geosite", "geosites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<geosite>("veedatatest5Model.FK_vmtemplates_geosite", "geosites", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_content", "imagecontents")]
        public imagecontent imagecontent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagecontent>("veedatatest5Model.FK_vmtemplates_content", "imagecontents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagecontent>("veedatatest5Model.FK_vmtemplates_content", "imagecontents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<imagecontent> imagecontentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<imagecontent>("veedatatest5Model.FK_vmtemplates_content", "imagecontents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<imagecontent>("veedatatest5Model.FK_vmtemplates_content", "imagecontents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_imageshistory_template", "imageshistory")]
        public EntityCollection<imageshistory> imageshistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_template", "imageshistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<imageshistory>("veedatatest5Model.FK_imageshistory_template", "imageshistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_jobs_template", "jobs")]
        public EntityCollection<job> jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<job>("veedatatest5Model.FK_jobs_template", "jobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<job>("veedatatest5Model.FK_jobs_template", "jobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_platform", "platforms")]
        public platform platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vmtemplates_platform", "platforms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vmtemplates_platform", "platforms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<platform> platformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<platform>("veedatatest5Model.FK_vmtemplates_platform", "platforms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<platform>("veedatatest5Model.FK_vmtemplates_platform", "platforms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_producttype", "producttypes")]
        public producttype producttype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vmtemplates_producttype", "producttypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vmtemplates_producttype", "producttypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<producttype> producttypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<producttype>("veedatatest5Model.FK_vmtemplates_producttype", "producttypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<producttype>("veedatatest5Model.FK_vmtemplates_producttype", "producttypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("veedatatest5Model", "FK_vmtemplates_usage", "usagetypes")]
        public usagetype usagetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_vmtemplates_usage", "usagetypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_vmtemplates_usage", "usagetypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usagetype> usagetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usagetype>("veedatatest5Model.FK_vmtemplates_usage", "usagetypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usagetype>("veedatatest5Model.FK_vmtemplates_usage", "usagetypes", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
